syntax = "proto3";
package AFMsg;

// Import all ss proto files in here.
import "AFEventCode.proto";
import "AFErrorCode.proto";
import "AFCommonMsg.proto";

enum EGameMsgID {
  EGMI_UNKNOW = 0;           // 位知
  EGMI_CLOSE_SOCKET = 3;     // 想要关闭某个网络对象

  EGMI_STS_HEART_BEAT = 100;

  EGMI_ACK_ENTITY_ENTER = 200;  // 有对象进入
  EGMI_ACK_ENTITY_LEAVE = 201;  // 有对象出去

  EGMI_ACK_ENTITY_DATA_NODE_ENTER = 202;   // 有对象属性进入
  EGMI_ACK_ENTITY_DATA_TABLE_ENTER = 203;  // 有对象表进入

  EGMI_ACK_NODE_DATA = 210;  // 属性变更

  EGMI_ACK_ADD_ROW = 220;
  EGMI_ACK_REMOVE_ROW = 221;
  EGMI_ACK_SWAP_ROW = 222;
  EGMI_ACK_TABLE_DATA = 223;
  EGMI_ACK_TABLE_CLEAR = 229;
  EGMI_ACK_TABLE_SORT = 230;
}

///////////////排行榜相关////////////////////////////////////////////////////////////////////////////////////

enum ERankType {
  ERT_PLAYER_NONE = 0;
  ERT_PLAYER_LEVEL = 1;
  ERT_FIGHT_VALUE = 2;
  ERT_PLAYER_MONEY = 3;
  ERT_GUILD_LEVEL = 4;
  ERT_GUILD_KINGSOURCE = 5;
}

//这里主要是与游戏内容关系不是很大的协议，比如登录，创建角色，平台扣费等
enum EServerState {
  EST_CRASH = 0;
  EST_NARMAL = 1;
  EST_BUSY = 2;
  EST_FIRE = 3;
  EST_MAINTEN = 4;
}

message ServerHeartBeat  // 心跳
{
  int32 count = 1;  // 数量，暂时没用到，以后可以用来做角色数量报告等
}

//除 去基础对象身上的属性外，这里全部游戏中的逻辑协议
message ReqHeartBeat {}

message EntityEnterInfo  //对象出现基本信息
{
  int64 object_guid = 1;
  Point3D pos = 2;
  int32 career_type = 3;
  int32 player_state = 4;
  uint32 config_id = 5;
  int32 scene_id = 6;
  string class_id = 7;
}

message AckEntityEnterList  //对象出现列表
{
  repeated EntityEnterInfo entity_list = 1;
}

message AckEntityLeaveList  //对象离去列表
{
  repeated int64 entity_list = 1;
}

message ReqPickDropItem  //拾取物品
{
  int64 item_guid = 2;
}

message ReqAcceptTask  //接受任务
{
  string task_id = 1;
}

message ReqCompeleteTask  //完成任务后申请领奖
{
  string task_id = 1;
}

// EGEC_REQSWICHSERVER							= 210;		 //
// 申请转服
message ReqSwitchServer {
  int64 selfid = 1;           // 角色ID
  int64 self_serverid = 2;    // 本来所在的服务器
  int64 target_serverid = 3;  // 目标ID
  int64 gate_serverid = 4;    // 目标ID
  int64 SceneID = 5;          //
  int64 client_id = 6;        // 客户端id
  int64 groupID = 7;          //  group
}

// EGEC_ACKSWICHSERVER							= 211;		 //
// 申请转服
message AckSwitchServer {
  int64 selfid = 1;           // 角色ID
  int64 self_serverid = 2;    // 目标ID
  int64 target_serverid = 3;  // 目标ID
  int64 gate_serverid = 4;    // 目标ID
}