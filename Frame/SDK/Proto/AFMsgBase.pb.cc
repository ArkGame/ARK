// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AFMsgBase.proto

#include "AFMsgBase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace AFMsg {
class IdentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ident>
      _instance;
} _Ident_default_instance_;
class Point3DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3D>
      _instance;
} _Point3D_default_instance_;
class VariantDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VariantData>
      _instance;
  bool bool_value_;
  ::google::protobuf::int32 int_value_;
  ::google::protobuf::int64 int64_value_;
  float float_value_;
  double double_value_;
  ::google::protobuf::internal::ArenaStringPtr str_value_;
  const ::AFMsg::Ident* guid_value_;
} _VariantData_default_instance_;
class PropertyPBDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropertyPBData>
      _instance;
} _PropertyPBData_default_instance_;
class RecordPBDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordPBData>
      _instance;
} _RecordPBData_default_instance_;
class PBDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBData>
      _instance;
} _PBData_default_instance_;
class DataListPBDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataListPBData>
      _instance;
} _DataListPBData_default_instance_;
class RecordAddRowStructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordAddRowStruct>
      _instance;
} _RecordAddRowStruct_default_instance_;
class ObjectRecordBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordBase>
      _instance;
} _ObjectRecordBase_default_instance_;
class ObjectPropertyListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyList>
      _instance;
} _ObjectPropertyList_default_instance_;
class MultiObjectPropertyListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiObjectPropertyList>
      _instance;
} _MultiObjectPropertyList_default_instance_;
class ObjectRecordListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordList>
      _instance;
} _ObjectRecordList_default_instance_;
class MultiObjectRecordListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiObjectRecordList>
      _instance;
} _MultiObjectRecordList_default_instance_;
class ObjectPropertyPBDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyPBData>
      _instance;
} _ObjectPropertyPBData_default_instance_;
class ObjectRecordPBDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordPBData>
      _instance;
} _ObjectRecordPBData_default_instance_;
class ObjectRecordSwapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordSwap>
      _instance;
} _ObjectRecordSwap_default_instance_;
class ObjectRecordAddRowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordAddRow>
      _instance;
} _ObjectRecordAddRow_default_instance_;
class ObjectRecordRemoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordRemove>
      _instance;
} _ObjectRecordRemove_default_instance_;
class PlayerPropertyBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropertyBase>
      _instance;
} _PlayerPropertyBase_default_instance_;
class PlayerRecordBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerRecordBase>
      _instance;
} _PlayerRecordBase_default_instance_;
class PlayerRecordListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerRecordList>
      _instance;
} _PlayerRecordList_default_instance_;
class BrocastMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BrocastMsg>
      _instance;
} _BrocastMsg_default_instance_;
class PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Position>
      _instance;
} _Position_default_instance_;
class ReqCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqCommand>
      _instance;
} _ReqCommand_default_instance_;
}  // namespace AFMsg
namespace protobuf_AFMsgBase_2eproto {
void InitDefaultsIdentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::AFMsg::_Ident_default_instance_;
    new (ptr) ::AFMsg::Ident();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::Ident::InitAsDefaultInstance();
}

void InitDefaultsIdent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIdentImpl);
}

void InitDefaultsPoint3DImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::AFMsg::_Point3D_default_instance_;
    new (ptr) ::AFMsg::Point3D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::Point3D::InitAsDefaultInstance();
}

void InitDefaultsPoint3D() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint3DImpl);
}

void InitDefaultsVariantDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::AFMsg::_VariantData_default_instance_;
    new (ptr) ::AFMsg::VariantData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::VariantData::InitAsDefaultInstance();
}

void InitDefaultsVariantData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVariantDataImpl);
}

void InitDefaultsPropertyPBDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsVariantData();
  {
    void* ptr = &::AFMsg::_PropertyPBData_default_instance_;
    new (ptr) ::AFMsg::PropertyPBData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::PropertyPBData::InitAsDefaultInstance();
}

void InitDefaultsPropertyPBData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPropertyPBDataImpl);
}

void InitDefaultsRecordPBDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsVariantData();
  {
    void* ptr = &::AFMsg::_RecordPBData_default_instance_;
    new (ptr) ::AFMsg::RecordPBData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::RecordPBData::InitAsDefaultInstance();
}

void InitDefaultsRecordPBData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordPBDataImpl);
}

void InitDefaultsPBDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsVariantData();
  {
    void* ptr = &::AFMsg::_PBData_default_instance_;
    new (ptr) ::AFMsg::PBData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::PBData::InitAsDefaultInstance();
}

void InitDefaultsPBData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPBDataImpl);
}

void InitDefaultsDataListPBDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsPBData();
  {
    void* ptr = &::AFMsg::_DataListPBData_default_instance_;
    new (ptr) ::AFMsg::DataListPBData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::DataListPBData::InitAsDefaultInstance();
}

void InitDefaultsDataListPBData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataListPBDataImpl);
}

void InitDefaultsRecordAddRowStructImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsRecordPBData();
  {
    void* ptr = &::AFMsg::_RecordAddRowStruct_default_instance_;
    new (ptr) ::AFMsg::RecordAddRowStruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::RecordAddRowStruct::InitAsDefaultInstance();
}

void InitDefaultsRecordAddRowStruct() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordAddRowStructImpl);
}

void InitDefaultsObjectRecordBaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsRecordAddRowStruct();
  {
    void* ptr = &::AFMsg::_ObjectRecordBase_default_instance_;
    new (ptr) ::AFMsg::ObjectRecordBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ObjectRecordBase::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordBase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordBaseImpl);
}

void InitDefaultsObjectPropertyListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_AFMsgBase_2eproto::InitDefaultsPropertyPBData();
  {
    void* ptr = &::AFMsg::_ObjectPropertyList_default_instance_;
    new (ptr) ::AFMsg::ObjectPropertyList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ObjectPropertyList::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyListImpl);
}

void InitDefaultsMultiObjectPropertyListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsObjectPropertyList();
  {
    void* ptr = &::AFMsg::_MultiObjectPropertyList_default_instance_;
    new (ptr) ::AFMsg::MultiObjectPropertyList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::MultiObjectPropertyList::InitAsDefaultInstance();
}

void InitDefaultsMultiObjectPropertyList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMultiObjectPropertyListImpl);
}

void InitDefaultsObjectRecordListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordBase();
  {
    void* ptr = &::AFMsg::_ObjectRecordList_default_instance_;
    new (ptr) ::AFMsg::ObjectRecordList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ObjectRecordList::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordListImpl);
}

void InitDefaultsMultiObjectRecordListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordList();
  {
    void* ptr = &::AFMsg::_MultiObjectRecordList_default_instance_;
    new (ptr) ::AFMsg::MultiObjectRecordList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::MultiObjectRecordList::InitAsDefaultInstance();
}

void InitDefaultsMultiObjectRecordList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMultiObjectRecordListImpl);
}

void InitDefaultsObjectPropertyPBDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_AFMsgBase_2eproto::InitDefaultsPropertyPBData();
  {
    void* ptr = &::AFMsg::_ObjectPropertyPBData_default_instance_;
    new (ptr) ::AFMsg::ObjectPropertyPBData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ObjectPropertyPBData::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyPBData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyPBDataImpl);
}

void InitDefaultsObjectRecordPBDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_AFMsgBase_2eproto::InitDefaultsRecordPBData();
  {
    void* ptr = &::AFMsg::_ObjectRecordPBData_default_instance_;
    new (ptr) ::AFMsg::ObjectRecordPBData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ObjectRecordPBData::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordPBData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordPBDataImpl);
}

void InitDefaultsObjectRecordSwapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::AFMsg::_ObjectRecordSwap_default_instance_;
    new (ptr) ::AFMsg::ObjectRecordSwap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ObjectRecordSwap::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordSwap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordSwapImpl);
}

void InitDefaultsObjectRecordAddRowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_AFMsgBase_2eproto::InitDefaultsRecordAddRowStruct();
  {
    void* ptr = &::AFMsg::_ObjectRecordAddRow_default_instance_;
    new (ptr) ::AFMsg::ObjectRecordAddRow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ObjectRecordAddRow::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordAddRow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordAddRowImpl);
}

void InitDefaultsObjectRecordRemoveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::AFMsg::_ObjectRecordRemove_default_instance_;
    new (ptr) ::AFMsg::ObjectRecordRemove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ObjectRecordRemove::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordRemove() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordRemoveImpl);
}

void InitDefaultsPlayerPropertyBaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsPropertyPBData();
  {
    void* ptr = &::AFMsg::_PlayerPropertyBase_default_instance_;
    new (ptr) ::AFMsg::PlayerPropertyBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::PlayerPropertyBase::InitAsDefaultInstance();
}

void InitDefaultsPlayerPropertyBase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerPropertyBaseImpl);
}

void InitDefaultsPlayerRecordBaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsRecordPBData();
  {
    void* ptr = &::AFMsg::_PlayerRecordBase_default_instance_;
    new (ptr) ::AFMsg::PlayerRecordBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::PlayerRecordBase::InitAsDefaultInstance();
}

void InitDefaultsPlayerRecordBase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerRecordBaseImpl);
}

void InitDefaultsPlayerRecordListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsPlayerRecordBase();
  {
    void* ptr = &::AFMsg::_PlayerRecordList_default_instance_;
    new (ptr) ::AFMsg::PlayerRecordList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::PlayerRecordList::InitAsDefaultInstance();
}

void InitDefaultsPlayerRecordList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerRecordListImpl);
}

void InitDefaultsBrocastMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::AFMsg::_BrocastMsg_default_instance_;
    new (ptr) ::AFMsg::BrocastMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::BrocastMsg::InitAsDefaultInstance();
}

void InitDefaultsBrocastMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBrocastMsgImpl);
}

void InitDefaultsPositionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::AFMsg::_Position_default_instance_;
    new (ptr) ::AFMsg::Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::Position::InitAsDefaultInstance();
}

void InitDefaultsPosition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPositionImpl);
}

void InitDefaultsReqCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::AFMsg::_ReqCommand_default_instance_;
    new (ptr) ::AFMsg::ReqCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::ReqCommand::InitAsDefaultInstance();
}

void InitDefaultsReqCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqCommandImpl);
}

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Ident, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Ident, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Ident, low_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Point3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Point3D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Point3D, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Point3D, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::VariantData, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::VariantData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::AFMsg::VariantDataDefaultTypeInternal, bool_value_),
  offsetof(::AFMsg::VariantDataDefaultTypeInternal, int_value_),
  offsetof(::AFMsg::VariantDataDefaultTypeInternal, int64_value_),
  offsetof(::AFMsg::VariantDataDefaultTypeInternal, float_value_),
  offsetof(::AFMsg::VariantDataDefaultTypeInternal, double_value_),
  offsetof(::AFMsg::VariantDataDefaultTypeInternal, str_value_),
  offsetof(::AFMsg::VariantDataDefaultTypeInternal, guid_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::VariantData, AFData_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PropertyPBData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PropertyPBData, property_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PropertyPBData, ndatatype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PropertyPBData, variant_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::RecordPBData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::RecordPBData, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::RecordPBData, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::RecordPBData, ndatatype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::RecordPBData, variant_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PBData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PBData, ndatatype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PBData, variant_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::DataListPBData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::DataListPBData, data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::RecordAddRowStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::RecordAddRowStruct, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::RecordAddRowStruct, record_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordBase, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordBase, row_struct_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectPropertyList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectPropertyList, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectPropertyList, property_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::MultiObjectPropertyList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::MultiObjectPropertyList, multi_player_property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordList, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordList, record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::MultiObjectRecordList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::MultiObjectRecordList, multi_player_record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectPropertyPBData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectPropertyPBData, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectPropertyPBData, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordPBData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordPBData, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordPBData, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordPBData, record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordSwap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordSwap, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordSwap, origin_record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordSwap, target_record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordSwap, row_origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordSwap, row_target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordAddRow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordAddRow, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordAddRow, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordAddRow, row_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordRemove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordRemove, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordRemove, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ObjectRecordRemove, remove_row_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PlayerPropertyBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PlayerPropertyBase, property_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PlayerRecordBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PlayerRecordBase, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PlayerRecordBase, record_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PlayerRecordList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PlayerRecordList, record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::BrocastMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::BrocastMsg, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::BrocastMsg, msg_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::BrocastMsg, nmsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::BrocastMsg, player_client_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Position, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Position, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::Position, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ReqCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ReqCommand, control_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::ReqCommand, command_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AFMsg::Ident)},
  { 7, -1, sizeof(::AFMsg::Point3D)},
  { 15, -1, sizeof(::AFMsg::VariantData)},
  { 28, -1, sizeof(::AFMsg::PropertyPBData)},
  { 36, -1, sizeof(::AFMsg::RecordPBData)},
  { 45, -1, sizeof(::AFMsg::PBData)},
  { 52, -1, sizeof(::AFMsg::DataListPBData)},
  { 58, -1, sizeof(::AFMsg::RecordAddRowStruct)},
  { 65, -1, sizeof(::AFMsg::ObjectRecordBase)},
  { 72, -1, sizeof(::AFMsg::ObjectPropertyList)},
  { 79, -1, sizeof(::AFMsg::MultiObjectPropertyList)},
  { 85, -1, sizeof(::AFMsg::ObjectRecordList)},
  { 92, -1, sizeof(::AFMsg::MultiObjectRecordList)},
  { 98, -1, sizeof(::AFMsg::ObjectPropertyPBData)},
  { 105, -1, sizeof(::AFMsg::ObjectRecordPBData)},
  { 113, -1, sizeof(::AFMsg::ObjectRecordSwap)},
  { 123, -1, sizeof(::AFMsg::ObjectRecordAddRow)},
  { 131, -1, sizeof(::AFMsg::ObjectRecordRemove)},
  { 139, -1, sizeof(::AFMsg::PlayerPropertyBase)},
  { 145, -1, sizeof(::AFMsg::PlayerRecordBase)},
  { 152, -1, sizeof(::AFMsg::PlayerRecordList)},
  { 158, -1, sizeof(::AFMsg::BrocastMsg)},
  { 167, -1, sizeof(::AFMsg::Position)},
  { 175, -1, sizeof(::AFMsg::ReqCommand)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_Ident_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_Point3D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_VariantData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_PropertyPBData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_RecordPBData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_PBData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_DataListPBData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_RecordAddRowStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ObjectRecordBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ObjectPropertyList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_MultiObjectPropertyList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ObjectRecordList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_MultiObjectRecordList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ObjectPropertyPBData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ObjectRecordPBData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ObjectRecordSwap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ObjectRecordAddRow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ObjectRecordRemove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_PlayerPropertyBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_PlayerRecordBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_PlayerRecordList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_BrocastMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_ReqCommand_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "AFMsgBase.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017AFMsgBase.proto\022\005AFMsg\032\016AFDefine.proto"
      "\"\"\n\005Ident\022\014\n\004high\030\001 \001(\003\022\013\n\003low\030\002 \001(\003\"*\n\007"
      "Point3D\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002"
      "\"\301\001\n\013VariantData\022\024\n\nbool_value\030\001 \001(\010H\000\022\023"
      "\n\tint_value\030\002 \001(\005H\000\022\025\n\013int64_value\030\003 \001(\003"
      "H\000\022\025\n\013float_value\030\004 \001(\002H\000\022\026\n\014double_valu"
      "e\030\005 \001(\001H\000\022\023\n\tstr_value\030\006 \001(\tH\000\022\"\n\nguid_v"
      "alue\030\007 \001(\0132\014.AFMsg.IdentH\000B\010\n\006AFData\"d\n\016"
      "PropertyPBData\022\025\n\rproperty_name\030\001 \001(\t\022\021\n"
      "\tndataType\030\002 \001(\005\022(\n\014variant_data\030\003 \001(\0132\022"
      ".AFMsg.VariantData\"e\n\014RecordPBData\022\013\n\003ro"
      "w\030\001 \001(\005\022\013\n\003col\030\002 \001(\005\022\021\n\tndataType\030\003 \001(\005\022"
      "(\n\014variant_data\030\004 \001(\0132\022.AFMsg.VariantDat"
      "a\"E\n\006PBData\022\021\n\tndataType\030\001 \001(\005\022(\n\014varian"
      "t_data\030\002 \001(\0132\022.AFMsg.VariantData\"2\n\016Data"
      "ListPBData\022 \n\tdata_list\030\001 \003(\0132\r.AFMsg.PB"
      "Data\"P\n\022RecordAddRowStruct\022\013\n\003row\030\001 \001(\005\022"
      "-\n\020record_data_list\030\002 \003(\0132\023.AFMsg.Record"
      "PBData\"V\n\020ObjectRecordBase\022\023\n\013record_nam"
      "e\030\001 \001(\t\022-\n\nrow_struct\030\002 \003(\0132\031.AFMsg.Reco"
      "rdAddRowStruct\"h\n\022ObjectPropertyList\022\037\n\t"
      "player_id\030\001 \001(\0132\014.AFMsg.Ident\0221\n\022propert"
      "y_data_list\030\002 \003(\0132\025.AFMsg.PropertyPBData"
      "\"S\n\027MultiObjectPropertyList\0228\n\025multi_pla"
      "yer_property\030\001 \003(\0132\031.AFMsg.ObjectPropert"
      "yList\"a\n\020ObjectRecordList\022\037\n\tplayer_id\030\001"
      " \001(\0132\014.AFMsg.Ident\022,\n\013record_list\030\002 \003(\0132"
      "\027.AFMsg.ObjectRecordBase\"M\n\025MultiObjectR"
      "ecordList\0224\n\023multi_player_record\030\001 \003(\0132\027"
      ".AFMsg.ObjectRecordList\"e\n\024ObjectPropert"
      "yPBData\022\037\n\tplayer_id\030\001 \001(\0132\014.AFMsg.Ident"
      "\022,\n\rproperty_list\030\002 \003(\0132\025.AFMsg.Property"
      "PBData\"t\n\022ObjectRecordPBData\022\037\n\tplayer_i"
      "d\030\001 \001(\0132\014.AFMsg.Ident\022\023\n\013record_name\030\002 \001"
      "(\t\022(\n\013record_list\030\003 \003(\0132\023.AFMsg.RecordPB"
      "Data\"\223\001\n\020ObjectRecordSwap\022\037\n\tplayer_id\030\001"
      " \001(\0132\014.AFMsg.Ident\022\032\n\022origin_record_name"
      "\030\002 \001(\t\022\032\n\022target_record_name\030\003 \001(\t\022\022\n\nro"
      "w_origin\030\004 \001(\005\022\022\n\nrow_target\030\005 \001(\005\"w\n\022Ob"
      "jectRecordAddRow\022\037\n\tplayer_id\030\001 \001(\0132\014.AF"
      "Msg.Ident\022\023\n\013record_name\030\002 \001(\t\022+\n\010row_da"
      "ta\030\003 \003(\0132\031.AFMsg.RecordAddRowStruct\"^\n\022O"
      "bjectRecordRemove\022\037\n\tplayer_id\030\001 \001(\0132\014.A"
      "FMsg.Ident\022\023\n\013record_name\030\002 \001(\t\022\022\n\nremov"
      "e_row\030\003 \003(\005\"G\n\022PlayerPropertyBase\0221\n\022pro"
      "perty_data_list\030\001 \003(\0132\025.AFMsg.PropertyPB"
      "Data\"V\n\020PlayerRecordBase\022\023\n\013record_name\030"
      "\001 \001(\t\022-\n\020record_data_list\030\002 \003(\0132\023.AFMsg."
      "RecordPBData\"@\n\020PlayerRecordList\022,\n\013reco"
      "rd_list\030\001 \003(\0132\027.AFMsg.PlayerRecordBase\"y"
      "\n\nBrocastMsg\022\037\n\tplayer_id\030\001 \001(\0132\014.AFMsg."
      "Ident\022\020\n\010msg_data\030\002 \001(\t\022\016\n\006nMsgID\030\003 \001(\003\022"
      "(\n\022player_Client_list\030\004 \003(\0132\014.AFMsg.Iden"
      "t\"+\n\010Position\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z"
      "\030\003 \001(\002\"\327\001\n\nReqCommand\022 \n\ncontrol_id\030\001 \001("
      "\0132\014.AFMsg.Ident\0226\n\ncommand_id\030\002 \001(\0162\".AF"
      "Msg.ReqCommand.EGameCommandType\"o\n\020EGame"
      "CommandType\022\027\n\023EGCT_MODIY_PROPERTY\020\000\022\023\n\017"
      "EGCT_MODIY_ITEM\020\001\022\026\n\022EGCT_CREATE_OBJECT\020"
      "\002\022\025\n\021EGCT_ADD_ROLE_EXP\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2392);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AFMsgBase.proto", &protobuf_RegisterTypes);
  ::protobuf_AFDefine_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AFMsgBase_2eproto
namespace AFMsg {
const ::google::protobuf::EnumDescriptor* ReqCommand_EGameCommandType_descriptor() {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AFMsgBase_2eproto::file_level_enum_descriptors[0];
}
bool ReqCommand_EGameCommandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReqCommand_EGameCommandType ReqCommand::EGCT_MODIY_PROPERTY;
const ReqCommand_EGameCommandType ReqCommand::EGCT_MODIY_ITEM;
const ReqCommand_EGameCommandType ReqCommand::EGCT_CREATE_OBJECT;
const ReqCommand_EGameCommandType ReqCommand::EGCT_ADD_ROLE_EXP;
const ReqCommand_EGameCommandType ReqCommand::EGameCommandType_MIN;
const ReqCommand_EGameCommandType ReqCommand::EGameCommandType_MAX;
const int ReqCommand::EGameCommandType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Ident::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ident::kHighFieldNumber;
const int Ident::kLowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ident::Ident()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.Ident)
}
Ident::Ident(const Ident& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&high_, &from.high_,
    static_cast<size_t>(reinterpret_cast<char*>(&low_) -
    reinterpret_cast<char*>(&high_)) + sizeof(low_));
  // @@protoc_insertion_point(copy_constructor:AFMsg.Ident)
}

void Ident::SharedCtor() {
  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_) -
      reinterpret_cast<char*>(&high_)) + sizeof(low_));
  _cached_size_ = 0;
}

Ident::~Ident() {
  // @@protoc_insertion_point(destructor:AFMsg.Ident)
  SharedDtor();
}

void Ident::SharedDtor() {
}

void Ident::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ident::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ident& Ident::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsIdent();
  return *internal_default_instance();
}


void Ident::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_) -
      reinterpret_cast<char*>(&high_)) + sizeof(low_));
  _internal_metadata_.Clear();
}

bool Ident::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.Ident)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 high = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 low = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.Ident)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.Ident)
  return false;
#undef DO_
}

void Ident::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 high = 1;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->high(), output);
  }

  // int64 low = 2;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->low(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.Ident)
}

::google::protobuf::uint8* Ident::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 high = 1;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->high(), target);
  }

  // int64 low = 2;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->low(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.Ident)
  return target;
}

size_t Ident::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.Ident)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 high = 1;
  if (this->high() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->high());
  }

  // int64 low = 2;
  if (this->low() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->low());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ident::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  const Ident* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ident>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.Ident)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.Ident)
    MergeFrom(*source);
  }
}

void Ident::MergeFrom(const Ident& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.low() != 0) {
    set_low(from.low());
  }
}

void Ident::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ident::CopyFrom(const Ident& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ident::IsInitialized() const {
  return true;
}

void Ident::Swap(Ident* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ident::InternalSwap(Ident* other) {
  using std::swap;
  swap(high_, other->high_);
  swap(low_, other->low_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ident::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3D::kXFieldNumber;
const int Point3D::kYFieldNumber;
const int Point3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3D::Point3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsPoint3D();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.Point3D)
}
Point3D::Point3D(const Point3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:AFMsg.Point3D)
}

void Point3D::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:AFMsg.Point3D)
  SharedDtor();
}

void Point3D::SharedDtor() {
}

void Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3D::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3D& Point3D::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsPoint3D();
  return *internal_default_instance();
}


void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.Point3D)
  return false;
#undef DO_
}

void Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.Point3D)
}

::google::protobuf::uint8* Point3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.Point3D)
  return target;
}

size_t Point3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.Point3D)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.Point3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.Point3D)
    MergeFrom(*source);
  }
}

void Point3D::MergeFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Point3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D::IsInitialized() const {
  return true;
}

void Point3D::Swap(Point3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3D::InternalSwap(Point3D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VariantData::InitAsDefaultInstance() {
  ::AFMsg::_VariantData_default_instance_.bool_value_ = false;
  ::AFMsg::_VariantData_default_instance_.int_value_ = 0;
  ::AFMsg::_VariantData_default_instance_.int64_value_ = GOOGLE_LONGLONG(0);
  ::AFMsg::_VariantData_default_instance_.float_value_ = 0;
  ::AFMsg::_VariantData_default_instance_.double_value_ = 0;
  ::AFMsg::_VariantData_default_instance_.str_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::AFMsg::_VariantData_default_instance_.guid_value_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
void VariantData::set_allocated_guid_value(::AFMsg::Ident* guid_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_AFData();
  if (guid_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      guid_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guid_value, submessage_arena);
    }
    set_has_guid_value();
    AFData_.guid_value_ = guid_value;
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.VariantData.guid_value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VariantData::kBoolValueFieldNumber;
const int VariantData::kIntValueFieldNumber;
const int VariantData::kInt64ValueFieldNumber;
const int VariantData::kFloatValueFieldNumber;
const int VariantData::kDoubleValueFieldNumber;
const int VariantData::kStrValueFieldNumber;
const int VariantData::kGuidValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VariantData::VariantData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsVariantData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.VariantData)
}
VariantData::VariantData(const VariantData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_AFData();
  switch (from.AFData_case()) {
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStrValue: {
      set_str_value(from.str_value());
      break;
    }
    case kGuidValue: {
      mutable_guid_value()->::AFMsg::Ident::MergeFrom(from.guid_value());
      break;
    }
    case AFDATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.VariantData)
}

void VariantData::SharedCtor() {
  clear_has_AFData();
  _cached_size_ = 0;
}

VariantData::~VariantData() {
  // @@protoc_insertion_point(destructor:AFMsg.VariantData)
  SharedDtor();
}

void VariantData::SharedDtor() {
  if (has_AFData()) {
    clear_AFData();
  }
}

void VariantData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VariantData::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VariantData& VariantData::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsVariantData();
  return *internal_default_instance();
}


void VariantData::clear_AFData() {
// @@protoc_insertion_point(one_of_clear_start:AFMsg.VariantData)
  switch (AFData_case()) {
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStrValue: {
      AFData_.str_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kGuidValue: {
      delete AFData_.guid_value_;
      break;
    }
    case AFDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = AFDATA_NOT_SET;
}


void VariantData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.VariantData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_AFData();
  _internal_metadata_.Clear();
}

bool VariantData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.VariantData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool bool_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_AFData();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &AFData_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_AFData();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &AFData_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int64_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_AFData();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &AFData_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          clear_AFData();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &AFData_.float_value_)));
          set_has_float_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          clear_AFData();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &AFData_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_value().data(), static_cast<int>(this->str_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.VariantData.str_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AFMsg.Ident guid_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guid_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.VariantData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.VariantData)
  return false;
#undef DO_
}

void VariantData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.VariantData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_value = 1;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bool_value(), output);
  }

  // int32 int_value = 2;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->int_value(), output);
  }

  // int64 int64_value = 3;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->int64_value(), output);
  }

  // float float_value = 4;
  if (has_float_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->float_value(), output);
  }

  // double double_value = 5;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->double_value(), output);
  }

  // string str_value = 6;
  if (has_str_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_value().data(), static_cast<int>(this->str_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.VariantData.str_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->str_value(), output);
  }

  // .AFMsg.Ident guid_value = 7;
  if (has_guid_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *AFData_.guid_value_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.VariantData)
}

::google::protobuf::uint8* VariantData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.VariantData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_value = 1;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bool_value(), target);
  }

  // int32 int_value = 2;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->int_value(), target);
  }

  // int64 int64_value = 3;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->int64_value(), target);
  }

  // float float_value = 4;
  if (has_float_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->float_value(), target);
  }

  // double double_value = 5;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->double_value(), target);
  }

  // string str_value = 6;
  if (has_str_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_value().data(), static_cast<int>(this->str_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.VariantData.str_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->str_value(), target);
  }

  // .AFMsg.Ident guid_value = 7;
  if (has_guid_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *AFData_.guid_value_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.VariantData)
  return target;
}

size_t VariantData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.VariantData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (AFData_case()) {
    // bool bool_value = 1;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // int32 int_value = 2;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_value());
      break;
    }
    // int64 int64_value = 3;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // float float_value = 4;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // double double_value = 5;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string str_value = 6;
    case kStrValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_value());
      break;
    }
    // .AFMsg.Ident guid_value = 7;
    case kGuidValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *AFData_.guid_value_);
      break;
    }
    case AFDATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VariantData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.VariantData)
  GOOGLE_DCHECK_NE(&from, this);
  const VariantData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VariantData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.VariantData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.VariantData)
    MergeFrom(*source);
  }
}

void VariantData::MergeFrom(const VariantData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.VariantData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.AFData_case()) {
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStrValue: {
      set_str_value(from.str_value());
      break;
    }
    case kGuidValue: {
      mutable_guid_value()->::AFMsg::Ident::MergeFrom(from.guid_value());
      break;
    }
    case AFDATA_NOT_SET: {
      break;
    }
  }
}

void VariantData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.VariantData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariantData::CopyFrom(const VariantData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.VariantData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariantData::IsInitialized() const {
  return true;
}

void VariantData::Swap(VariantData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VariantData::InternalSwap(VariantData* other) {
  using std::swap;
  swap(AFData_, other->AFData_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VariantData::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropertyPBData::InitAsDefaultInstance() {
  ::AFMsg::_PropertyPBData_default_instance_._instance.get_mutable()->variant_data_ = const_cast< ::AFMsg::VariantData*>(
      ::AFMsg::VariantData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyPBData::kPropertyNameFieldNumber;
const int PropertyPBData::kNdataTypeFieldNumber;
const int PropertyPBData::kVariantDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyPBData::PropertyPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsPropertyPBData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PropertyPBData)
}
PropertyPBData::PropertyPBData(const PropertyPBData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property_name().size() > 0) {
    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.has_variant_data()) {
    variant_data_ = new ::AFMsg::VariantData(*from.variant_data_);
  } else {
    variant_data_ = NULL;
  }
  ndatatype_ = from.ndatatype_;
  // @@protoc_insertion_point(copy_constructor:AFMsg.PropertyPBData)
}

void PropertyPBData::SharedCtor() {
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&variant_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ndatatype_) -
      reinterpret_cast<char*>(&variant_data_)) + sizeof(ndatatype_));
  _cached_size_ = 0;
}

PropertyPBData::~PropertyPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.PropertyPBData)
  SharedDtor();
}

void PropertyPBData::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete variant_data_;
}

void PropertyPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyPBData::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyPBData& PropertyPBData::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsPropertyPBData();
  return *internal_default_instance();
}


void PropertyPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PropertyPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && variant_data_ != NULL) {
    delete variant_data_;
  }
  variant_data_ = NULL;
  ndatatype_ = 0;
  _internal_metadata_.Clear();
}

bool PropertyPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PropertyPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string property_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->property_name().data(), static_cast<int>(this->property_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.PropertyPBData.property_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ndataType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndatatype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AFMsg.VariantData variant_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_variant_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PropertyPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PropertyPBData)
  return false;
#undef DO_
}

void PropertyPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PropertyPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property_name().data(), static_cast<int>(this->property_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PropertyPBData.property_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->property_name(), output);
  }

  // int32 ndataType = 2;
  if (this->ndatatype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ndatatype(), output);
  }

  // .AFMsg.VariantData variant_data = 3;
  if (this->has_variant_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *variant_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PropertyPBData)
}

::google::protobuf::uint8* PropertyPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PropertyPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property_name().data(), static_cast<int>(this->property_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PropertyPBData.property_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->property_name(), target);
  }

  // int32 ndataType = 2;
  if (this->ndatatype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ndatatype(), target);
  }

  // .AFMsg.VariantData variant_data = 3;
  if (this->has_variant_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *variant_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PropertyPBData)
  return target;
}

size_t PropertyPBData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PropertyPBData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string property_name = 1;
  if (this->property_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->property_name());
  }

  // .AFMsg.VariantData variant_data = 3;
  if (this->has_variant_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *variant_data_);
  }

  // int32 ndataType = 2;
  if (this->ndatatype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndatatype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PropertyPBData)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyPBData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PropertyPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PropertyPBData)
    MergeFrom(*source);
  }
}

void PropertyPBData::MergeFrom(const PropertyPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PropertyPBData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.property_name().size() > 0) {

    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.has_variant_data()) {
    mutable_variant_data()->::AFMsg::VariantData::MergeFrom(from.variant_data());
  }
  if (from.ndatatype() != 0) {
    set_ndatatype(from.ndatatype());
  }
}

void PropertyPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PropertyPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyPBData::CopyFrom(const PropertyPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PropertyPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyPBData::IsInitialized() const {
  return true;
}

void PropertyPBData::Swap(PropertyPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyPBData::InternalSwap(PropertyPBData* other) {
  using std::swap;
  property_name_.Swap(&other->property_name_);
  swap(variant_data_, other->variant_data_);
  swap(ndatatype_, other->ndatatype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyPBData::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordPBData::InitAsDefaultInstance() {
  ::AFMsg::_RecordPBData_default_instance_._instance.get_mutable()->variant_data_ = const_cast< ::AFMsg::VariantData*>(
      ::AFMsg::VariantData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordPBData::kRowFieldNumber;
const int RecordPBData::kColFieldNumber;
const int RecordPBData::kNdataTypeFieldNumber;
const int RecordPBData::kVariantDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordPBData::RecordPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsRecordPBData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.RecordPBData)
}
RecordPBData::RecordPBData(const RecordPBData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_variant_data()) {
    variant_data_ = new ::AFMsg::VariantData(*from.variant_data_);
  } else {
    variant_data_ = NULL;
  }
  ::memcpy(&row_, &from.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&ndatatype_) -
    reinterpret_cast<char*>(&row_)) + sizeof(ndatatype_));
  // @@protoc_insertion_point(copy_constructor:AFMsg.RecordPBData)
}

void RecordPBData::SharedCtor() {
  ::memset(&variant_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ndatatype_) -
      reinterpret_cast<char*>(&variant_data_)) + sizeof(ndatatype_));
  _cached_size_ = 0;
}

RecordPBData::~RecordPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.RecordPBData)
  SharedDtor();
}

void RecordPBData::SharedDtor() {
  if (this != internal_default_instance()) delete variant_data_;
}

void RecordPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordPBData::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordPBData& RecordPBData::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsRecordPBData();
  return *internal_default_instance();
}


void RecordPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.RecordPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && variant_data_ != NULL) {
    delete variant_data_;
  }
  variant_data_ = NULL;
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ndatatype_) -
      reinterpret_cast<char*>(&row_)) + sizeof(ndatatype_));
  _internal_metadata_.Clear();
}

bool RecordPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.RecordPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ndataType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndatatype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AFMsg.VariantData variant_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_variant_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.RecordPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.RecordPBData)
  return false;
#undef DO_
}

void RecordPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.RecordPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->col(), output);
  }

  // int32 ndataType = 3;
  if (this->ndatatype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ndatatype(), output);
  }

  // .AFMsg.VariantData variant_data = 4;
  if (this->has_variant_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *variant_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.RecordPBData)
}

::google::protobuf::uint8* RecordPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.RecordPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->col(), target);
  }

  // int32 ndataType = 3;
  if (this->ndatatype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ndatatype(), target);
  }

  // .AFMsg.VariantData variant_data = 4;
  if (this->has_variant_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *variant_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.RecordPBData)
  return target;
}

size_t RecordPBData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.RecordPBData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .AFMsg.VariantData variant_data = 4;
  if (this->has_variant_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *variant_data_);
  }

  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 2;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  // int32 ndataType = 3;
  if (this->ndatatype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndatatype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.RecordPBData)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordPBData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.RecordPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.RecordPBData)
    MergeFrom(*source);
  }
}

void RecordPBData::MergeFrom(const RecordPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.RecordPBData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_variant_data()) {
    mutable_variant_data()->::AFMsg::VariantData::MergeFrom(from.variant_data());
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
  if (from.ndatatype() != 0) {
    set_ndatatype(from.ndatatype());
  }
}

void RecordPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.RecordPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordPBData::CopyFrom(const RecordPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.RecordPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordPBData::IsInitialized() const {
  return true;
}

void RecordPBData::Swap(RecordPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordPBData::InternalSwap(RecordPBData* other) {
  using std::swap;
  swap(variant_data_, other->variant_data_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  swap(ndatatype_, other->ndatatype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordPBData::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBData::InitAsDefaultInstance() {
  ::AFMsg::_PBData_default_instance_._instance.get_mutable()->variant_data_ = const_cast< ::AFMsg::VariantData*>(
      ::AFMsg::VariantData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBData::kNdataTypeFieldNumber;
const int PBData::kVariantDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBData::PBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsPBData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PBData)
}
PBData::PBData(const PBData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_variant_data()) {
    variant_data_ = new ::AFMsg::VariantData(*from.variant_data_);
  } else {
    variant_data_ = NULL;
  }
  ndatatype_ = from.ndatatype_;
  // @@protoc_insertion_point(copy_constructor:AFMsg.PBData)
}

void PBData::SharedCtor() {
  ::memset(&variant_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ndatatype_) -
      reinterpret_cast<char*>(&variant_data_)) + sizeof(ndatatype_));
  _cached_size_ = 0;
}

PBData::~PBData() {
  // @@protoc_insertion_point(destructor:AFMsg.PBData)
  SharedDtor();
}

void PBData::SharedDtor() {
  if (this != internal_default_instance()) delete variant_data_;
}

void PBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBData::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBData& PBData::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsPBData();
  return *internal_default_instance();
}


void PBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && variant_data_ != NULL) {
    delete variant_data_;
  }
  variant_data_ = NULL;
  ndatatype_ = 0;
  _internal_metadata_.Clear();
}

bool PBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ndataType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndatatype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AFMsg.VariantData variant_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_variant_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PBData)
  return false;
#undef DO_
}

void PBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ndataType = 1;
  if (this->ndatatype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ndatatype(), output);
  }

  // .AFMsg.VariantData variant_data = 2;
  if (this->has_variant_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *variant_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PBData)
}

::google::protobuf::uint8* PBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ndataType = 1;
  if (this->ndatatype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ndatatype(), target);
  }

  // .AFMsg.VariantData variant_data = 2;
  if (this->has_variant_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *variant_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PBData)
  return target;
}

size_t PBData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PBData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .AFMsg.VariantData variant_data = 2;
  if (this->has_variant_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *variant_data_);
  }

  // int32 ndataType = 1;
  if (this->ndatatype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndatatype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PBData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PBData)
    MergeFrom(*source);
  }
}

void PBData::MergeFrom(const PBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PBData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_variant_data()) {
    mutable_variant_data()->::AFMsg::VariantData::MergeFrom(from.variant_data());
  }
  if (from.ndatatype() != 0) {
    set_ndatatype(from.ndatatype());
  }
}

void PBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBData::CopyFrom(const PBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBData::IsInitialized() const {
  return true;
}

void PBData::Swap(PBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBData::InternalSwap(PBData* other) {
  using std::swap;
  swap(variant_data_, other->variant_data_);
  swap(ndatatype_, other->ndatatype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBData::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataListPBData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataListPBData::kDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataListPBData::DataListPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsDataListPBData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.DataListPBData)
}
DataListPBData::DataListPBData(const DataListPBData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_list_(from.data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AFMsg.DataListPBData)
}

void DataListPBData::SharedCtor() {
  _cached_size_ = 0;
}

DataListPBData::~DataListPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.DataListPBData)
  SharedDtor();
}

void DataListPBData::SharedDtor() {
}

void DataListPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataListPBData::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataListPBData& DataListPBData::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsDataListPBData();
  return *internal_default_instance();
}


void DataListPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.DataListPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_list_.Clear();
  _internal_metadata_.Clear();
}

bool DataListPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.DataListPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.PBData data_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.DataListPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.DataListPBData)
  return false;
#undef DO_
}

void DataListPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.DataListPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.PBData data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->data_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.DataListPBData)
}

::google::protobuf::uint8* DataListPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.DataListPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.PBData data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.DataListPBData)
  return target;
}

size_t DataListPBData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.DataListPBData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.PBData data_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataListPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.DataListPBData)
  GOOGLE_DCHECK_NE(&from, this);
  const DataListPBData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataListPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.DataListPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.DataListPBData)
    MergeFrom(*source);
  }
}

void DataListPBData::MergeFrom(const DataListPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.DataListPBData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_list_.MergeFrom(from.data_list_);
}

void DataListPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.DataListPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataListPBData::CopyFrom(const DataListPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.DataListPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataListPBData::IsInitialized() const {
  return true;
}

void DataListPBData::Swap(DataListPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataListPBData::InternalSwap(DataListPBData* other) {
  using std::swap;
  CastToBase(&data_list_)->InternalSwap(CastToBase(&other->data_list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataListPBData::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordAddRowStruct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordAddRowStruct::kRowFieldNumber;
const int RecordAddRowStruct::kRecordDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordAddRowStruct::RecordAddRowStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsRecordAddRowStruct();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.RecordAddRowStruct)
}
RecordAddRowStruct::RecordAddRowStruct(const RecordAddRowStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_data_list_(from.record_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_ = from.row_;
  // @@protoc_insertion_point(copy_constructor:AFMsg.RecordAddRowStruct)
}

void RecordAddRowStruct::SharedCtor() {
  row_ = 0;
  _cached_size_ = 0;
}

RecordAddRowStruct::~RecordAddRowStruct() {
  // @@protoc_insertion_point(destructor:AFMsg.RecordAddRowStruct)
  SharedDtor();
}

void RecordAddRowStruct::SharedDtor() {
}

void RecordAddRowStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordAddRowStruct::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordAddRowStruct& RecordAddRowStruct::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsRecordAddRowStruct();
  return *internal_default_instance();
}


void RecordAddRowStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.RecordAddRowStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_data_list_.Clear();
  row_ = 0;
  _internal_metadata_.Clear();
}

bool RecordAddRowStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.RecordAddRowStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.RecordPBData record_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_record_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.RecordAddRowStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.RecordAddRowStruct)
  return false;
#undef DO_
}

void RecordAddRowStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.RecordAddRowStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->record_data_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.RecordAddRowStruct)
}

::google::protobuf::uint8* RecordAddRowStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.RecordAddRowStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->record_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.RecordAddRowStruct)
  return target;
}

size_t RecordAddRowStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.RecordAddRowStruct)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.RecordPBData record_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->record_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_data_list(static_cast<int>(i)));
    }
  }

  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordAddRowStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.RecordAddRowStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordAddRowStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordAddRowStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.RecordAddRowStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.RecordAddRowStruct)
    MergeFrom(*source);
  }
}

void RecordAddRowStruct::MergeFrom(const RecordAddRowStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.RecordAddRowStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_data_list_.MergeFrom(from.record_data_list_);
  if (from.row() != 0) {
    set_row(from.row());
  }
}

void RecordAddRowStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.RecordAddRowStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordAddRowStruct::CopyFrom(const RecordAddRowStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.RecordAddRowStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordAddRowStruct::IsInitialized() const {
  return true;
}

void RecordAddRowStruct::Swap(RecordAddRowStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordAddRowStruct::InternalSwap(RecordAddRowStruct* other) {
  using std::swap;
  CastToBase(&record_data_list_)->InternalSwap(CastToBase(&other->record_data_list_));
  swap(row_, other->row_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordAddRowStruct::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordBase::kRecordNameFieldNumber;
const int ObjectRecordBase::kRowStructFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordBase::ObjectRecordBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordBase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordBase)
}
ObjectRecordBase::ObjectRecordBase(const ObjectRecordBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      row_struct_(from.row_struct_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordBase)
}

void ObjectRecordBase::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ObjectRecordBase::~ObjectRecordBase() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordBase)
  SharedDtor();
}

void ObjectRecordBase::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjectRecordBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordBase::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordBase& ObjectRecordBase::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordBase();
  return *internal_default_instance();
}


void ObjectRecordBase::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_struct_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ObjectRecordBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string record_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_record_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->record_name().data(), static_cast<int>(this->record_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.ObjectRecordBase.record_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_row_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordBase)
  return false;
#undef DO_
}

void ObjectRecordBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string record_name = 1;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordBase.record_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->record_name(), output);
  }

  // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_struct_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->row_struct(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordBase)
}

::google::protobuf::uint8* ObjectRecordBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string record_name = 1;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordBase.record_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->record_name(), target);
  }

  // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_struct_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->row_struct(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordBase)
  return target;
}

size_t ObjectRecordBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->row_struct_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row_struct(static_cast<int>(i)));
    }
  }

  // string record_name = 1;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->record_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordBase)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordBase)
    MergeFrom(*source);
  }
}

void ObjectRecordBase::MergeFrom(const ObjectRecordBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_struct_.MergeFrom(from.row_struct_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
}

void ObjectRecordBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordBase::CopyFrom(const ObjectRecordBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordBase::IsInitialized() const {
  return true;
}

void ObjectRecordBase::Swap(ObjectRecordBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordBase::InternalSwap(ObjectRecordBase* other) {
  using std::swap;
  CastToBase(&row_struct_)->InternalSwap(CastToBase(&other->row_struct_));
  record_name_.Swap(&other->record_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordBase::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyList::InitAsDefaultInstance() {
  ::AFMsg::_ObjectPropertyList_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyList::kPlayerIdFieldNumber;
const int ObjectPropertyList::kPropertyDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyList::ObjectPropertyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectPropertyList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectPropertyList)
}
ObjectPropertyList::ObjectPropertyList(const ObjectPropertyList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_data_list_(from.property_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::AFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectPropertyList)
}

void ObjectPropertyList::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyList::~ObjectPropertyList() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectPropertyList)
  SharedDtor();
}

void ObjectPropertyList::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyList::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyList& ObjectPropertyList::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectPropertyList();
  return *internal_default_instance();
}


void ObjectPropertyList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_data_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectPropertyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.PropertyPBData property_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_property_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectPropertyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectPropertyList)
  return false;
#undef DO_
}

void ObjectPropertyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *player_id_, output);
  }

  // repeated .AFMsg.PropertyPBData property_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->property_data_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectPropertyList)
}

::google::protobuf::uint8* ObjectPropertyList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *player_id_, deterministic, target);
  }

  // repeated .AFMsg.PropertyPBData property_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectPropertyList)
  return target;
}

size_t ObjectPropertyList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectPropertyList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.PropertyPBData property_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_data_list(static_cast<int>(i)));
    }
  }

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectPropertyList)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectPropertyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectPropertyList)
    MergeFrom(*source);
  }
}

void ObjectPropertyList::MergeFrom(const ObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectPropertyList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_data_list_.MergeFrom(from.property_data_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyList::CopyFrom(const ObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyList::IsInitialized() const {
  return true;
}

void ObjectPropertyList::Swap(ObjectPropertyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyList::InternalSwap(ObjectPropertyList* other) {
  using std::swap;
  CastToBase(&property_data_list_)->InternalSwap(CastToBase(&other->property_data_list_));
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyList::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MultiObjectPropertyList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiObjectPropertyList::kMultiPlayerPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiObjectPropertyList::MultiObjectPropertyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsMultiObjectPropertyList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.MultiObjectPropertyList)
}
MultiObjectPropertyList::MultiObjectPropertyList(const MultiObjectPropertyList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      multi_player_property_(from.multi_player_property_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AFMsg.MultiObjectPropertyList)
}

void MultiObjectPropertyList::SharedCtor() {
  _cached_size_ = 0;
}

MultiObjectPropertyList::~MultiObjectPropertyList() {
  // @@protoc_insertion_point(destructor:AFMsg.MultiObjectPropertyList)
  SharedDtor();
}

void MultiObjectPropertyList::SharedDtor() {
}

void MultiObjectPropertyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiObjectPropertyList::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiObjectPropertyList& MultiObjectPropertyList::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsMultiObjectPropertyList();
  return *internal_default_instance();
}


void MultiObjectPropertyList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.MultiObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  multi_player_property_.Clear();
  _internal_metadata_.Clear();
}

bool MultiObjectPropertyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.MultiObjectPropertyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_multi_player_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.MultiObjectPropertyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.MultiObjectPropertyList)
  return false;
#undef DO_
}

void MultiObjectPropertyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.MultiObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->multi_player_property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->multi_player_property(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.MultiObjectPropertyList)
}

::google::protobuf::uint8* MultiObjectPropertyList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.MultiObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->multi_player_property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->multi_player_property(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.MultiObjectPropertyList)
  return target;
}

size_t MultiObjectPropertyList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.MultiObjectPropertyList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->multi_player_property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->multi_player_property(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiObjectPropertyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.MultiObjectPropertyList)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiObjectPropertyList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiObjectPropertyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.MultiObjectPropertyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.MultiObjectPropertyList)
    MergeFrom(*source);
  }
}

void MultiObjectPropertyList::MergeFrom(const MultiObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.MultiObjectPropertyList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  multi_player_property_.MergeFrom(from.multi_player_property_);
}

void MultiObjectPropertyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.MultiObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiObjectPropertyList::CopyFrom(const MultiObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.MultiObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiObjectPropertyList::IsInitialized() const {
  return true;
}

void MultiObjectPropertyList::Swap(MultiObjectPropertyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiObjectPropertyList::InternalSwap(MultiObjectPropertyList* other) {
  using std::swap;
  CastToBase(&multi_player_property_)->InternalSwap(CastToBase(&other->multi_player_property_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiObjectPropertyList::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordList::InitAsDefaultInstance() {
  ::AFMsg::_ObjectRecordList_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordList::kPlayerIdFieldNumber;
const int ObjectRecordList::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordList::ObjectRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordList)
}
ObjectRecordList::ObjectRecordList(const ObjectRecordList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_list_(from.record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::AFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordList)
}

void ObjectRecordList::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordList::~ObjectRecordList() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordList)
  SharedDtor();
}

void ObjectRecordList::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordList::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordList& ObjectRecordList::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordList();
  return *internal_default_instance();
}


void ObjectRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.ObjectRecordBase record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordList)
  return false;
#undef DO_
}

void ObjectRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *player_id_, output);
  }

  // repeated .AFMsg.ObjectRecordBase record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->record_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordList)
}

::google::protobuf::uint8* ObjectRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *player_id_, deterministic, target);
  }

  // repeated .AFMsg.ObjectRecordBase record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordList)
  return target;
}

size_t ObjectRecordList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.ObjectRecordBase record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_list(static_cast<int>(i)));
    }
  }

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordList)
    MergeFrom(*source);
  }
}

void ObjectRecordList::MergeFrom(const ObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_list_.MergeFrom(from.record_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordList::CopyFrom(const ObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordList::IsInitialized() const {
  return true;
}

void ObjectRecordList::Swap(ObjectRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordList::InternalSwap(ObjectRecordList* other) {
  using std::swap;
  CastToBase(&record_list_)->InternalSwap(CastToBase(&other->record_list_));
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordList::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MultiObjectRecordList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiObjectRecordList::kMultiPlayerRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiObjectRecordList::MultiObjectRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsMultiObjectRecordList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.MultiObjectRecordList)
}
MultiObjectRecordList::MultiObjectRecordList(const MultiObjectRecordList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      multi_player_record_(from.multi_player_record_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AFMsg.MultiObjectRecordList)
}

void MultiObjectRecordList::SharedCtor() {
  _cached_size_ = 0;
}

MultiObjectRecordList::~MultiObjectRecordList() {
  // @@protoc_insertion_point(destructor:AFMsg.MultiObjectRecordList)
  SharedDtor();
}

void MultiObjectRecordList::SharedDtor() {
}

void MultiObjectRecordList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiObjectRecordList::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiObjectRecordList& MultiObjectRecordList::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsMultiObjectRecordList();
  return *internal_default_instance();
}


void MultiObjectRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.MultiObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  multi_player_record_.Clear();
  _internal_metadata_.Clear();
}

bool MultiObjectRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.MultiObjectRecordList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_multi_player_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.MultiObjectRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.MultiObjectRecordList)
  return false;
#undef DO_
}

void MultiObjectRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.MultiObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->multi_player_record_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->multi_player_record(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.MultiObjectRecordList)
}

::google::protobuf::uint8* MultiObjectRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.MultiObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->multi_player_record_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->multi_player_record(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.MultiObjectRecordList)
  return target;
}

size_t MultiObjectRecordList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.MultiObjectRecordList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->multi_player_record_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->multi_player_record(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiObjectRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.MultiObjectRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiObjectRecordList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiObjectRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.MultiObjectRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.MultiObjectRecordList)
    MergeFrom(*source);
  }
}

void MultiObjectRecordList::MergeFrom(const MultiObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.MultiObjectRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  multi_player_record_.MergeFrom(from.multi_player_record_);
}

void MultiObjectRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.MultiObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiObjectRecordList::CopyFrom(const MultiObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.MultiObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiObjectRecordList::IsInitialized() const {
  return true;
}

void MultiObjectRecordList::Swap(MultiObjectRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiObjectRecordList::InternalSwap(MultiObjectRecordList* other) {
  using std::swap;
  CastToBase(&multi_player_record_)->InternalSwap(CastToBase(&other->multi_player_record_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiObjectRecordList::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyPBData::InitAsDefaultInstance() {
  ::AFMsg::_ObjectPropertyPBData_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyPBData::kPlayerIdFieldNumber;
const int ObjectPropertyPBData::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyPBData::ObjectPropertyPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectPropertyPBData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectPropertyPBData)
}
ObjectPropertyPBData::ObjectPropertyPBData(const ObjectPropertyPBData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::AFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectPropertyPBData)
}

void ObjectPropertyPBData::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyPBData::~ObjectPropertyPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectPropertyPBData)
  SharedDtor();
}

void ObjectPropertyPBData::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyPBData::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyPBData& ObjectPropertyPBData::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectPropertyPBData();
  return *internal_default_instance();
}


void ObjectPropertyPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectPropertyPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectPropertyPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.PropertyPBData property_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectPropertyPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectPropertyPBData)
  return false;
#undef DO_
}

void ObjectPropertyPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectPropertyPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *player_id_, output);
  }

  // repeated .AFMsg.PropertyPBData property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->property_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectPropertyPBData)
}

::google::protobuf::uint8* ObjectPropertyPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectPropertyPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *player_id_, deterministic, target);
  }

  // repeated .AFMsg.PropertyPBData property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectPropertyPBData)
  return target;
}

size_t ObjectPropertyPBData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectPropertyPBData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.PropertyPBData property_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectPropertyPBData)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyPBData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectPropertyPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectPropertyPBData)
    MergeFrom(*source);
  }
}

void ObjectPropertyPBData::MergeFrom(const ObjectPropertyPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectPropertyPBData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectPropertyPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyPBData::CopyFrom(const ObjectPropertyPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectPropertyPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyPBData::IsInitialized() const {
  return true;
}

void ObjectPropertyPBData::Swap(ObjectPropertyPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyPBData::InternalSwap(ObjectPropertyPBData* other) {
  using std::swap;
  CastToBase(&property_list_)->InternalSwap(CastToBase(&other->property_list_));
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyPBData::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordPBData::InitAsDefaultInstance() {
  ::AFMsg::_ObjectRecordPBData_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordPBData::kPlayerIdFieldNumber;
const int ObjectRecordPBData::kRecordNameFieldNumber;
const int ObjectRecordPBData::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordPBData::ObjectRecordPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordPBData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordPBData)
}
ObjectRecordPBData::ObjectRecordPBData(const ObjectRecordPBData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_list_(from.record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::AFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordPBData)
}

void ObjectRecordPBData::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordPBData::~ObjectRecordPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordPBData)
  SharedDtor();
}

void ObjectRecordPBData::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordPBData::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordPBData& ObjectRecordPBData::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordPBData();
  return *internal_default_instance();
}


void ObjectRecordPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_list_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_record_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->record_name().data(), static_cast<int>(this->record_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.ObjectRecordPBData.record_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.RecordPBData record_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordPBData)
  return false;
#undef DO_
}

void ObjectRecordPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *player_id_, output);
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordPBData.record_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .AFMsg.RecordPBData record_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->record_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordPBData)
}

::google::protobuf::uint8* ObjectRecordPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordPBData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *player_id_, deterministic, target);
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordPBData.record_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->record_name(), target);
  }

  // repeated .AFMsg.RecordPBData record_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordPBData)
  return target;
}

size_t ObjectRecordPBData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordPBData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.RecordPBData record_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_list(static_cast<int>(i)));
    }
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->record_name());
  }

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordPBData)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordPBData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordPBData)
    MergeFrom(*source);
  }
}

void ObjectRecordPBData::MergeFrom(const ObjectRecordPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordPBData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_list_.MergeFrom(from.record_list_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordPBData::CopyFrom(const ObjectRecordPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordPBData::IsInitialized() const {
  return true;
}

void ObjectRecordPBData::Swap(ObjectRecordPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordPBData::InternalSwap(ObjectRecordPBData* other) {
  using std::swap;
  CastToBase(&record_list_)->InternalSwap(CastToBase(&other->record_list_));
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordPBData::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordSwap::InitAsDefaultInstance() {
  ::AFMsg::_ObjectRecordSwap_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordSwap::kPlayerIdFieldNumber;
const int ObjectRecordSwap::kOriginRecordNameFieldNumber;
const int ObjectRecordSwap::kTargetRecordNameFieldNumber;
const int ObjectRecordSwap::kRowOriginFieldNumber;
const int ObjectRecordSwap::kRowTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordSwap::ObjectRecordSwap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordSwap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordSwap)
}
ObjectRecordSwap::ObjectRecordSwap(const ObjectRecordSwap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  origin_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origin_record_name().size() > 0) {
    origin_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_record_name_);
  }
  target_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_record_name().size() > 0) {
    target_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::AFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  ::memcpy(&row_origin_, &from.row_origin_,
    static_cast<size_t>(reinterpret_cast<char*>(&row_target_) -
    reinterpret_cast<char*>(&row_origin_)) + sizeof(row_target_));
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordSwap)
}

void ObjectRecordSwap::SharedCtor() {
  origin_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_target_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(row_target_));
  _cached_size_ = 0;
}

ObjectRecordSwap::~ObjectRecordSwap() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordSwap)
  SharedDtor();
}

void ObjectRecordSwap::SharedDtor() {
  origin_record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordSwap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordSwap::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordSwap& ObjectRecordSwap::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordSwap();
  return *internal_default_instance();
}


void ObjectRecordSwap::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origin_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  ::memset(&row_origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_target_) -
      reinterpret_cast<char*>(&row_origin_)) + sizeof(row_target_));
  _internal_metadata_.Clear();
}

bool ObjectRecordSwap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordSwap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string origin_record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin_record_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->origin_record_name().data(), static_cast<int>(this->origin_record_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.ObjectRecordSwap.origin_record_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_record_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_record_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_record_name().data(), static_cast<int>(this->target_record_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.ObjectRecordSwap.target_record_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row_origin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row_target = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordSwap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordSwap)
  return false;
#undef DO_
}

void ObjectRecordSwap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *player_id_, output);
  }

  // string origin_record_name = 2;
  if (this->origin_record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin_record_name().data(), static_cast<int>(this->origin_record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordSwap.origin_record_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->origin_record_name(), output);
  }

  // string target_record_name = 3;
  if (this->target_record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_record_name().data(), static_cast<int>(this->target_record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordSwap.target_record_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->target_record_name(), output);
  }

  // int32 row_origin = 4;
  if (this->row_origin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->row_origin(), output);
  }

  // int32 row_target = 5;
  if (this->row_target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->row_target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordSwap)
}

::google::protobuf::uint8* ObjectRecordSwap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *player_id_, deterministic, target);
  }

  // string origin_record_name = 2;
  if (this->origin_record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin_record_name().data(), static_cast<int>(this->origin_record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordSwap.origin_record_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->origin_record_name(), target);
  }

  // string target_record_name = 3;
  if (this->target_record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_record_name().data(), static_cast<int>(this->target_record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordSwap.target_record_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target_record_name(), target);
  }

  // int32 row_origin = 4;
  if (this->row_origin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->row_origin(), target);
  }

  // int32 row_target = 5;
  if (this->row_target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->row_target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordSwap)
  return target;
}

size_t ObjectRecordSwap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordSwap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string origin_record_name = 2;
  if (this->origin_record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin_record_name());
  }

  // string target_record_name = 3;
  if (this->target_record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_record_name());
  }

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_id_);
  }

  // int32 row_origin = 4;
  if (this->row_origin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_origin());
  }

  // int32 row_target = 5;
  if (this->row_target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordSwap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordSwap)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordSwap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordSwap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordSwap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordSwap)
    MergeFrom(*source);
  }
}

void ObjectRecordSwap::MergeFrom(const ObjectRecordSwap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordSwap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.origin_record_name().size() > 0) {

    origin_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_record_name_);
  }
  if (from.target_record_name().size() > 0) {

    target_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
  }
  if (from.row_origin() != 0) {
    set_row_origin(from.row_origin());
  }
  if (from.row_target() != 0) {
    set_row_target(from.row_target());
  }
}

void ObjectRecordSwap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordSwap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordSwap::CopyFrom(const ObjectRecordSwap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordSwap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordSwap::IsInitialized() const {
  return true;
}

void ObjectRecordSwap::Swap(ObjectRecordSwap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordSwap::InternalSwap(ObjectRecordSwap* other) {
  using std::swap;
  origin_record_name_.Swap(&other->origin_record_name_);
  target_record_name_.Swap(&other->target_record_name_);
  swap(player_id_, other->player_id_);
  swap(row_origin_, other->row_origin_);
  swap(row_target_, other->row_target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordSwap::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordAddRow::InitAsDefaultInstance() {
  ::AFMsg::_ObjectRecordAddRow_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordAddRow::kPlayerIdFieldNumber;
const int ObjectRecordAddRow::kRecordNameFieldNumber;
const int ObjectRecordAddRow::kRowDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordAddRow::ObjectRecordAddRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordAddRow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordAddRow)
}
ObjectRecordAddRow::ObjectRecordAddRow(const ObjectRecordAddRow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      row_data_(from.row_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::AFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordAddRow)
}

void ObjectRecordAddRow::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordAddRow::~ObjectRecordAddRow() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordAddRow)
  SharedDtor();
}

void ObjectRecordAddRow::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordAddRow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordAddRow::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordAddRow& ObjectRecordAddRow::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordAddRow();
  return *internal_default_instance();
}


void ObjectRecordAddRow::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordAddRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_data_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordAddRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordAddRow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_record_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->record_name().data(), static_cast<int>(this->record_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.ObjectRecordAddRow.record_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.RecordAddRowStruct row_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_row_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordAddRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordAddRow)
  return false;
#undef DO_
}

void ObjectRecordAddRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordAddRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *player_id_, output);
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordAddRow.record_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .AFMsg.RecordAddRowStruct row_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->row_data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordAddRow)
}

::google::protobuf::uint8* ObjectRecordAddRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordAddRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *player_id_, deterministic, target);
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordAddRow.record_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->record_name(), target);
  }

  // repeated .AFMsg.RecordAddRowStruct row_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->row_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordAddRow)
  return target;
}

size_t ObjectRecordAddRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordAddRow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.RecordAddRowStruct row_data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->row_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row_data(static_cast<int>(i)));
    }
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->record_name());
  }

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordAddRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordAddRow)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordAddRow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordAddRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordAddRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordAddRow)
    MergeFrom(*source);
  }
}

void ObjectRecordAddRow::MergeFrom(const ObjectRecordAddRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordAddRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_data_.MergeFrom(from.row_data_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordAddRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordAddRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordAddRow::CopyFrom(const ObjectRecordAddRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordAddRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordAddRow::IsInitialized() const {
  return true;
}

void ObjectRecordAddRow::Swap(ObjectRecordAddRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordAddRow::InternalSwap(ObjectRecordAddRow* other) {
  using std::swap;
  CastToBase(&row_data_)->InternalSwap(CastToBase(&other->row_data_));
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordAddRow::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordRemove::InitAsDefaultInstance() {
  ::AFMsg::_ObjectRecordRemove_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordRemove::kPlayerIdFieldNumber;
const int ObjectRecordRemove::kRecordNameFieldNumber;
const int ObjectRecordRemove::kRemoveRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordRemove::ObjectRecordRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordRemove();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordRemove)
}
ObjectRecordRemove::ObjectRecordRemove(const ObjectRecordRemove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remove_row_(from.remove_row_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::AFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordRemove)
}

void ObjectRecordRemove::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordRemove::~ObjectRecordRemove() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordRemove)
  SharedDtor();
}

void ObjectRecordRemove::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordRemove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordRemove::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordRemove& ObjectRecordRemove::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordRemove();
  return *internal_default_instance();
}


void ObjectRecordRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remove_row_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordRemove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_record_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->record_name().data(), static_cast<int>(this->record_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.ObjectRecordRemove.record_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_row = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_row())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_remove_row())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordRemove)
  return false;
#undef DO_
}

void ObjectRecordRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *player_id_, output);
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordRemove.record_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated int32 remove_row = 3;
  if (this->remove_row_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _remove_row_cached_byte_size_));
  }
  for (int i = 0, n = this->remove_row_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->remove_row(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordRemove)
}

::google::protobuf::uint8* ObjectRecordRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *player_id_, deterministic, target);
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.ObjectRecordRemove.record_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->record_name(), target);
  }

  // repeated int32 remove_row = 3;
  if (this->remove_row_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _remove_row_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->remove_row_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordRemove)
  return target;
}

size_t ObjectRecordRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordRemove)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 remove_row = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_row_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _remove_row_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->record_name());
  }

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordRemove)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordRemove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordRemove)
    MergeFrom(*source);
  }
}

void ObjectRecordRemove::MergeFrom(const ObjectRecordRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordRemove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remove_row_.MergeFrom(from.remove_row_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordRemove::CopyFrom(const ObjectRecordRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordRemove::IsInitialized() const {
  return true;
}

void ObjectRecordRemove::Swap(ObjectRecordRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordRemove::InternalSwap(ObjectRecordRemove* other) {
  using std::swap;
  remove_row_.InternalSwap(&other->remove_row_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordRemove::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerPropertyBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPropertyBase::kPropertyDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropertyBase::PlayerPropertyBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerPropertyBase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PlayerPropertyBase)
}
PlayerPropertyBase::PlayerPropertyBase(const PlayerPropertyBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_data_list_(from.property_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AFMsg.PlayerPropertyBase)
}

void PlayerPropertyBase::SharedCtor() {
  _cached_size_ = 0;
}

PlayerPropertyBase::~PlayerPropertyBase() {
  // @@protoc_insertion_point(destructor:AFMsg.PlayerPropertyBase)
  SharedDtor();
}

void PlayerPropertyBase::SharedDtor() {
}

void PlayerPropertyBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPropertyBase::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPropertyBase& PlayerPropertyBase::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerPropertyBase();
  return *internal_default_instance();
}


void PlayerPropertyBase::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PlayerPropertyBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerPropertyBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PlayerPropertyBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.PropertyPBData property_data_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_property_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PlayerPropertyBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PlayerPropertyBase)
  return false;
#undef DO_
}

void PlayerPropertyBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PlayerPropertyBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.PropertyPBData property_data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->property_data_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PlayerPropertyBase)
}

::google::protobuf::uint8* PlayerPropertyBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PlayerPropertyBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.PropertyPBData property_data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->property_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PlayerPropertyBase)
  return target;
}

size_t PlayerPropertyBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PlayerPropertyBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.PropertyPBData property_data_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->property_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPropertyBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PlayerPropertyBase)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPropertyBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropertyBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PlayerPropertyBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PlayerPropertyBase)
    MergeFrom(*source);
  }
}

void PlayerPropertyBase::MergeFrom(const PlayerPropertyBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PlayerPropertyBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_data_list_.MergeFrom(from.property_data_list_);
}

void PlayerPropertyBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PlayerPropertyBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropertyBase::CopyFrom(const PlayerPropertyBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PlayerPropertyBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropertyBase::IsInitialized() const {
  return true;
}

void PlayerPropertyBase::Swap(PlayerPropertyBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropertyBase::InternalSwap(PlayerPropertyBase* other) {
  using std::swap;
  CastToBase(&property_data_list_)->InternalSwap(CastToBase(&other->property_data_list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPropertyBase::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerRecordBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRecordBase::kRecordNameFieldNumber;
const int PlayerRecordBase::kRecordDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRecordBase::PlayerRecordBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerRecordBase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PlayerRecordBase)
}
PlayerRecordBase::PlayerRecordBase(const PlayerRecordBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_data_list_(from.record_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  // @@protoc_insertion_point(copy_constructor:AFMsg.PlayerRecordBase)
}

void PlayerRecordBase::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PlayerRecordBase::~PlayerRecordBase() {
  // @@protoc_insertion_point(destructor:AFMsg.PlayerRecordBase)
  SharedDtor();
}

void PlayerRecordBase::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerRecordBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRecordBase::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerRecordBase& PlayerRecordBase::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerRecordBase();
  return *internal_default_instance();
}


void PlayerRecordBase::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PlayerRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_data_list_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerRecordBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PlayerRecordBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string record_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_record_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->record_name().data(), static_cast<int>(this->record_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.PlayerRecordBase.record_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.RecordPBData record_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_record_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PlayerRecordBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PlayerRecordBase)
  return false;
#undef DO_
}

void PlayerRecordBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PlayerRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string record_name = 1;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PlayerRecordBase.record_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->record_name(), output);
  }

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->record_data_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PlayerRecordBase)
}

::google::protobuf::uint8* PlayerRecordBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PlayerRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string record_name = 1;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_name().data(), static_cast<int>(this->record_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PlayerRecordBase.record_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->record_name(), target);
  }

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->record_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PlayerRecordBase)
  return target;
}

size_t PlayerRecordBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PlayerRecordBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.RecordPBData record_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->record_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_data_list(static_cast<int>(i)));
    }
  }

  // string record_name = 1;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->record_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRecordBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PlayerRecordBase)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRecordBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRecordBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PlayerRecordBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PlayerRecordBase)
    MergeFrom(*source);
  }
}

void PlayerRecordBase::MergeFrom(const PlayerRecordBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PlayerRecordBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_data_list_.MergeFrom(from.record_data_list_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
}

void PlayerRecordBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PlayerRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRecordBase::CopyFrom(const PlayerRecordBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PlayerRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRecordBase::IsInitialized() const {
  return true;
}

void PlayerRecordBase::Swap(PlayerRecordBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRecordBase::InternalSwap(PlayerRecordBase* other) {
  using std::swap;
  CastToBase(&record_data_list_)->InternalSwap(CastToBase(&other->record_data_list_));
  record_name_.Swap(&other->record_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRecordBase::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerRecordList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRecordList::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRecordList::PlayerRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerRecordList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PlayerRecordList)
}
PlayerRecordList::PlayerRecordList(const PlayerRecordList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_list_(from.record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AFMsg.PlayerRecordList)
}

void PlayerRecordList::SharedCtor() {
  _cached_size_ = 0;
}

PlayerRecordList::~PlayerRecordList() {
  // @@protoc_insertion_point(destructor:AFMsg.PlayerRecordList)
  SharedDtor();
}

void PlayerRecordList::SharedDtor() {
}

void PlayerRecordList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRecordList::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerRecordList& PlayerRecordList::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerRecordList();
  return *internal_default_instance();
}


void PlayerRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PlayerRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PlayerRecordList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.PlayerRecordBase record_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PlayerRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PlayerRecordList)
  return false;
#undef DO_
}

void PlayerRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PlayerRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.PlayerRecordBase record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->record_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PlayerRecordList)
}

::google::protobuf::uint8* PlayerRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PlayerRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AFMsg.PlayerRecordBase record_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PlayerRecordList)
  return target;
}

size_t PlayerRecordList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PlayerRecordList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.PlayerRecordBase record_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PlayerRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRecordList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PlayerRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PlayerRecordList)
    MergeFrom(*source);
  }
}

void PlayerRecordList::MergeFrom(const PlayerRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PlayerRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_list_.MergeFrom(from.record_list_);
}

void PlayerRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PlayerRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRecordList::CopyFrom(const PlayerRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PlayerRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRecordList::IsInitialized() const {
  return true;
}

void PlayerRecordList::Swap(PlayerRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRecordList::InternalSwap(PlayerRecordList* other) {
  using std::swap;
  CastToBase(&record_list_)->InternalSwap(CastToBase(&other->record_list_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRecordList::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BrocastMsg::InitAsDefaultInstance() {
  ::AFMsg::_BrocastMsg_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BrocastMsg::kPlayerIdFieldNumber;
const int BrocastMsg::kMsgDataFieldNumber;
const int BrocastMsg::kNMsgIDFieldNumber;
const int BrocastMsg::kPlayerClientListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BrocastMsg::BrocastMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsBrocastMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.BrocastMsg)
}
BrocastMsg::BrocastMsg(const BrocastMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_client_list_(from.player_client_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_data().size() > 0) {
    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::AFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  nmsgid_ = from.nmsgid_;
  // @@protoc_insertion_point(copy_constructor:AFMsg.BrocastMsg)
}

void BrocastMsg::SharedCtor() {
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nmsgid_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(nmsgid_));
  _cached_size_ = 0;
}

BrocastMsg::~BrocastMsg() {
  // @@protoc_insertion_point(destructor:AFMsg.BrocastMsg)
  SharedDtor();
}

void BrocastMsg::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void BrocastMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BrocastMsg::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BrocastMsg& BrocastMsg::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsBrocastMsg();
  return *internal_default_instance();
}


void BrocastMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.BrocastMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_client_list_.Clear();
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  nmsgid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool BrocastMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.BrocastMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_data().data(), static_cast<int>(this->msg_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.BrocastMsg.msg_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nMsgID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nmsgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AFMsg.Ident player_Client_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_player_client_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.BrocastMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.BrocastMsg)
  return false;
#undef DO_
}

void BrocastMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.BrocastMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *player_id_, output);
  }

  // string msg_data = 2;
  if (this->msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_data().data(), static_cast<int>(this->msg_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.BrocastMsg.msg_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_data(), output);
  }

  // int64 nMsgID = 3;
  if (this->nmsgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->nmsgid(), output);
  }

  // repeated .AFMsg.Ident player_Client_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_client_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->player_client_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.BrocastMsg)
}

::google::protobuf::uint8* BrocastMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.BrocastMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *player_id_, deterministic, target);
  }

  // string msg_data = 2;
  if (this->msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_data().data(), static_cast<int>(this->msg_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.BrocastMsg.msg_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_data(), target);
  }

  // int64 nMsgID = 3;
  if (this->nmsgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->nmsgid(), target);
  }

  // repeated .AFMsg.Ident player_Client_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_client_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->player_client_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.BrocastMsg)
  return target;
}

size_t BrocastMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.BrocastMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .AFMsg.Ident player_Client_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->player_client_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_client_list(static_cast<int>(i)));
    }
  }

  // string msg_data = 2;
  if (this->msg_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_data());
  }

  // .AFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_id_);
  }

  // int64 nMsgID = 3;
  if (this->nmsgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nmsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BrocastMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.BrocastMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BrocastMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BrocastMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.BrocastMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.BrocastMsg)
    MergeFrom(*source);
  }
}

void BrocastMsg::MergeFrom(const BrocastMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.BrocastMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_client_list_.MergeFrom(from.player_client_list_);
  if (from.msg_data().size() > 0) {

    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
  }
  if (from.nmsgid() != 0) {
    set_nmsgid(from.nmsgid());
  }
}

void BrocastMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.BrocastMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BrocastMsg::CopyFrom(const BrocastMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.BrocastMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrocastMsg::IsInitialized() const {
  return true;
}

void BrocastMsg::Swap(BrocastMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BrocastMsg::InternalSwap(BrocastMsg* other) {
  using std::swap;
  CastToBase(&player_client_list_)->InternalSwap(CastToBase(&other->player_client_list_));
  msg_data_.Swap(&other->msg_data_);
  swap(player_id_, other->player_id_);
  swap(nmsgid_, other->nmsgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BrocastMsg::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Position::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kXFieldNumber;
const int Position::kYFieldNumber;
const int Position::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsPosition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:AFMsg.Position)
}

void Position::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:AFMsg.Position)
  SharedDtor();
}

void Position::SharedDtor() {
}

void Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position& Position::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsPosition();
  return *internal_default_instance();
}


void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqCommand::InitAsDefaultInstance() {
  ::AFMsg::_ReqCommand_default_instance_._instance.get_mutable()->control_id_ = const_cast< ::AFMsg::Ident*>(
      ::AFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqCommand::kControlIdFieldNumber;
const int ReqCommand::kCommandIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCommand::ReqCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgBase_2eproto::InitDefaultsReqCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ReqCommand)
}
ReqCommand::ReqCommand(const ReqCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_control_id()) {
    control_id_ = new ::AFMsg::Ident(*from.control_id_);
  } else {
    control_id_ = NULL;
  }
  command_id_ = from.command_id_;
  // @@protoc_insertion_point(copy_constructor:AFMsg.ReqCommand)
}

void ReqCommand::SharedCtor() {
  ::memset(&control_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_id_) -
      reinterpret_cast<char*>(&control_id_)) + sizeof(command_id_));
  _cached_size_ = 0;
}

ReqCommand::~ReqCommand() {
  // @@protoc_insertion_point(destructor:AFMsg.ReqCommand)
  SharedDtor();
}

void ReqCommand::SharedDtor() {
  if (this != internal_default_instance()) delete control_id_;
}

void ReqCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqCommand::descriptor() {
  ::protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqCommand& ReqCommand::default_instance() {
  ::protobuf_AFMsgBase_2eproto::InitDefaultsReqCommand();
  return *internal_default_instance();
}


void ReqCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ReqCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && control_id_ != NULL) {
    delete control_id_;
  }
  control_id_ = NULL;
  command_id_ = 0;
  _internal_metadata_.Clear();
}

bool ReqCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ReqCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AFMsg.Ident control_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AFMsg.ReqCommand.EGameCommandType command_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command_id(static_cast< ::AFMsg::ReqCommand_EGameCommandType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ReqCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ReqCommand)
  return false;
#undef DO_
}

void ReqCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ReqCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident control_id = 1;
  if (this->has_control_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *control_id_, output);
  }

  // .AFMsg.ReqCommand.EGameCommandType command_id = 2;
  if (this->command_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->command_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ReqCommand)
}

::google::protobuf::uint8* ReqCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ReqCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AFMsg.Ident control_id = 1;
  if (this->has_control_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *control_id_, deterministic, target);
  }

  // .AFMsg.ReqCommand.EGameCommandType command_id = 2;
  if (this->command_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->command_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ReqCommand)
  return target;
}

size_t ReqCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ReqCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .AFMsg.Ident control_id = 1;
  if (this->has_control_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *control_id_);
  }

  // .AFMsg.ReqCommand.EGameCommandType command_id = 2;
  if (this->command_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ReqCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ReqCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ReqCommand)
    MergeFrom(*source);
  }
}

void ReqCommand::MergeFrom(const ReqCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ReqCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_control_id()) {
    mutable_control_id()->::AFMsg::Ident::MergeFrom(from.control_id());
  }
  if (from.command_id() != 0) {
    set_command_id(from.command_id());
  }
}

void ReqCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ReqCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCommand::CopyFrom(const ReqCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ReqCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCommand::IsInitialized() const {
  return true;
}

void ReqCommand::Swap(ReqCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCommand::InternalSwap(ReqCommand* other) {
  using std::swap;
  swap(control_id_, other->control_id_);
  swap(command_id_, other->command_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqCommand::GetMetadata() const {
  protobuf_AFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::Ident* Arena::Create< ::AFMsg::Ident >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::Ident >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::Point3D* Arena::Create< ::AFMsg::Point3D >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::Point3D >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::VariantData* Arena::Create< ::AFMsg::VariantData >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::VariantData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::PropertyPBData* Arena::Create< ::AFMsg::PropertyPBData >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::PropertyPBData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::RecordPBData* Arena::Create< ::AFMsg::RecordPBData >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::RecordPBData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::PBData* Arena::Create< ::AFMsg::PBData >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::PBData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::DataListPBData* Arena::Create< ::AFMsg::DataListPBData >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::DataListPBData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::RecordAddRowStruct* Arena::Create< ::AFMsg::RecordAddRowStruct >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::RecordAddRowStruct >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ObjectRecordBase* Arena::Create< ::AFMsg::ObjectRecordBase >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ObjectRecordBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ObjectPropertyList* Arena::Create< ::AFMsg::ObjectPropertyList >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ObjectPropertyList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::MultiObjectPropertyList* Arena::Create< ::AFMsg::MultiObjectPropertyList >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::MultiObjectPropertyList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ObjectRecordList* Arena::Create< ::AFMsg::ObjectRecordList >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ObjectRecordList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::MultiObjectRecordList* Arena::Create< ::AFMsg::MultiObjectRecordList >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::MultiObjectRecordList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ObjectPropertyPBData* Arena::Create< ::AFMsg::ObjectPropertyPBData >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ObjectPropertyPBData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ObjectRecordPBData* Arena::Create< ::AFMsg::ObjectRecordPBData >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ObjectRecordPBData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ObjectRecordSwap* Arena::Create< ::AFMsg::ObjectRecordSwap >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ObjectRecordSwap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ObjectRecordAddRow* Arena::Create< ::AFMsg::ObjectRecordAddRow >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ObjectRecordAddRow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ObjectRecordRemove* Arena::Create< ::AFMsg::ObjectRecordRemove >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ObjectRecordRemove >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::PlayerPropertyBase* Arena::Create< ::AFMsg::PlayerPropertyBase >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::PlayerPropertyBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::PlayerRecordBase* Arena::Create< ::AFMsg::PlayerRecordBase >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::PlayerRecordBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::PlayerRecordList* Arena::Create< ::AFMsg::PlayerRecordList >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::PlayerRecordList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::BrocastMsg* Arena::Create< ::AFMsg::BrocastMsg >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::BrocastMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::Position* Arena::Create< ::AFMsg::Position >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::Position >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::ReqCommand* Arena::Create< ::AFMsg::ReqCommand >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::ReqCommand >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
