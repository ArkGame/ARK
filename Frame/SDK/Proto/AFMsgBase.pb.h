// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AFMsgBase.proto

#ifndef PROTOBUF_AFMsgBase_2eproto_INCLUDED
#define PROTOBUF_AFMsgBase_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "AFDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_AFMsgBase_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[24];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
void LIBPROTOC_EXPORT InitDefaultsIdentImpl();
void LIBPROTOC_EXPORT InitDefaultsIdent();
void LIBPROTOC_EXPORT InitDefaultsPoint3DImpl();
void LIBPROTOC_EXPORT InitDefaultsPoint3D();
void LIBPROTOC_EXPORT InitDefaultsVariantDataImpl();
void LIBPROTOC_EXPORT InitDefaultsVariantData();
void LIBPROTOC_EXPORT InitDefaultsPropertyPBDataImpl();
void LIBPROTOC_EXPORT InitDefaultsPropertyPBData();
void LIBPROTOC_EXPORT InitDefaultsRecordPBDataImpl();
void LIBPROTOC_EXPORT InitDefaultsRecordPBData();
void LIBPROTOC_EXPORT InitDefaultsPBDataImpl();
void LIBPROTOC_EXPORT InitDefaultsPBData();
void LIBPROTOC_EXPORT InitDefaultsDataListPBDataImpl();
void LIBPROTOC_EXPORT InitDefaultsDataListPBData();
void LIBPROTOC_EXPORT InitDefaultsRecordAddRowStructImpl();
void LIBPROTOC_EXPORT InitDefaultsRecordAddRowStruct();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordBaseImpl();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordBase();
void LIBPROTOC_EXPORT InitDefaultsObjectPropertyListImpl();
void LIBPROTOC_EXPORT InitDefaultsObjectPropertyList();
void LIBPROTOC_EXPORT InitDefaultsMultiObjectPropertyListImpl();
void LIBPROTOC_EXPORT InitDefaultsMultiObjectPropertyList();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordListImpl();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordList();
void LIBPROTOC_EXPORT InitDefaultsMultiObjectRecordListImpl();
void LIBPROTOC_EXPORT InitDefaultsMultiObjectRecordList();
void LIBPROTOC_EXPORT InitDefaultsObjectPropertyPBDataImpl();
void LIBPROTOC_EXPORT InitDefaultsObjectPropertyPBData();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordPBDataImpl();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordPBData();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordSwapImpl();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordSwap();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordAddRowImpl();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordAddRow();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordRemoveImpl();
void LIBPROTOC_EXPORT InitDefaultsObjectRecordRemove();
void LIBPROTOC_EXPORT InitDefaultsPlayerPropertyBaseImpl();
void LIBPROTOC_EXPORT InitDefaultsPlayerPropertyBase();
void LIBPROTOC_EXPORT InitDefaultsPlayerRecordBaseImpl();
void LIBPROTOC_EXPORT InitDefaultsPlayerRecordBase();
void LIBPROTOC_EXPORT InitDefaultsPlayerRecordListImpl();
void LIBPROTOC_EXPORT InitDefaultsPlayerRecordList();
void LIBPROTOC_EXPORT InitDefaultsBrocastMsgImpl();
void LIBPROTOC_EXPORT InitDefaultsBrocastMsg();
void LIBPROTOC_EXPORT InitDefaultsPositionImpl();
void LIBPROTOC_EXPORT InitDefaultsPosition();
void LIBPROTOC_EXPORT InitDefaultsReqCommandImpl();
void LIBPROTOC_EXPORT InitDefaultsReqCommand();
inline void LIBPROTOC_EXPORT InitDefaults() {
  InitDefaultsIdent();
  InitDefaultsPoint3D();
  InitDefaultsVariantData();
  InitDefaultsPropertyPBData();
  InitDefaultsRecordPBData();
  InitDefaultsPBData();
  InitDefaultsDataListPBData();
  InitDefaultsRecordAddRowStruct();
  InitDefaultsObjectRecordBase();
  InitDefaultsObjectPropertyList();
  InitDefaultsMultiObjectPropertyList();
  InitDefaultsObjectRecordList();
  InitDefaultsMultiObjectRecordList();
  InitDefaultsObjectPropertyPBData();
  InitDefaultsObjectRecordPBData();
  InitDefaultsObjectRecordSwap();
  InitDefaultsObjectRecordAddRow();
  InitDefaultsObjectRecordRemove();
  InitDefaultsPlayerPropertyBase();
  InitDefaultsPlayerRecordBase();
  InitDefaultsPlayerRecordList();
  InitDefaultsBrocastMsg();
  InitDefaultsPosition();
  InitDefaultsReqCommand();
}
}  // namespace protobuf_AFMsgBase_2eproto
namespace AFMsg {
class BrocastMsg;
class BrocastMsgDefaultTypeInternal;
LIBPROTOC_EXPORT extern BrocastMsgDefaultTypeInternal _BrocastMsg_default_instance_;
class DataListPBData;
class DataListPBDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern DataListPBDataDefaultTypeInternal _DataListPBData_default_instance_;
class Ident;
class IdentDefaultTypeInternal;
LIBPROTOC_EXPORT extern IdentDefaultTypeInternal _Ident_default_instance_;
class MultiObjectPropertyList;
class MultiObjectPropertyListDefaultTypeInternal;
LIBPROTOC_EXPORT extern MultiObjectPropertyListDefaultTypeInternal _MultiObjectPropertyList_default_instance_;
class MultiObjectRecordList;
class MultiObjectRecordListDefaultTypeInternal;
LIBPROTOC_EXPORT extern MultiObjectRecordListDefaultTypeInternal _MultiObjectRecordList_default_instance_;
class ObjectPropertyList;
class ObjectPropertyListDefaultTypeInternal;
LIBPROTOC_EXPORT extern ObjectPropertyListDefaultTypeInternal _ObjectPropertyList_default_instance_;
class ObjectPropertyPBData;
class ObjectPropertyPBDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern ObjectPropertyPBDataDefaultTypeInternal _ObjectPropertyPBData_default_instance_;
class ObjectRecordAddRow;
class ObjectRecordAddRowDefaultTypeInternal;
LIBPROTOC_EXPORT extern ObjectRecordAddRowDefaultTypeInternal _ObjectRecordAddRow_default_instance_;
class ObjectRecordBase;
class ObjectRecordBaseDefaultTypeInternal;
LIBPROTOC_EXPORT extern ObjectRecordBaseDefaultTypeInternal _ObjectRecordBase_default_instance_;
class ObjectRecordList;
class ObjectRecordListDefaultTypeInternal;
LIBPROTOC_EXPORT extern ObjectRecordListDefaultTypeInternal _ObjectRecordList_default_instance_;
class ObjectRecordPBData;
class ObjectRecordPBDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern ObjectRecordPBDataDefaultTypeInternal _ObjectRecordPBData_default_instance_;
class ObjectRecordRemove;
class ObjectRecordRemoveDefaultTypeInternal;
LIBPROTOC_EXPORT extern ObjectRecordRemoveDefaultTypeInternal _ObjectRecordRemove_default_instance_;
class ObjectRecordSwap;
class ObjectRecordSwapDefaultTypeInternal;
LIBPROTOC_EXPORT extern ObjectRecordSwapDefaultTypeInternal _ObjectRecordSwap_default_instance_;
class PBData;
class PBDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBDataDefaultTypeInternal _PBData_default_instance_;
class PlayerPropertyBase;
class PlayerPropertyBaseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PlayerPropertyBaseDefaultTypeInternal _PlayerPropertyBase_default_instance_;
class PlayerRecordBase;
class PlayerRecordBaseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PlayerRecordBaseDefaultTypeInternal _PlayerRecordBase_default_instance_;
class PlayerRecordList;
class PlayerRecordListDefaultTypeInternal;
LIBPROTOC_EXPORT extern PlayerRecordListDefaultTypeInternal _PlayerRecordList_default_instance_;
class Point3D;
class Point3DDefaultTypeInternal;
LIBPROTOC_EXPORT extern Point3DDefaultTypeInternal _Point3D_default_instance_;
class Position;
class PositionDefaultTypeInternal;
LIBPROTOC_EXPORT extern PositionDefaultTypeInternal _Position_default_instance_;
class PropertyPBData;
class PropertyPBDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PropertyPBDataDefaultTypeInternal _PropertyPBData_default_instance_;
class RecordAddRowStruct;
class RecordAddRowStructDefaultTypeInternal;
LIBPROTOC_EXPORT extern RecordAddRowStructDefaultTypeInternal _RecordAddRowStruct_default_instance_;
class RecordPBData;
class RecordPBDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern RecordPBDataDefaultTypeInternal _RecordPBData_default_instance_;
class ReqCommand;
class ReqCommandDefaultTypeInternal;
LIBPROTOC_EXPORT extern ReqCommandDefaultTypeInternal _ReqCommand_default_instance_;
class VariantData;
class VariantDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern VariantDataDefaultTypeInternal _VariantData_default_instance_;
}  // namespace AFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::AFMsg::BrocastMsg* Arena::Create< ::AFMsg::BrocastMsg>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::DataListPBData* Arena::Create< ::AFMsg::DataListPBData>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::Ident* Arena::Create< ::AFMsg::Ident>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::MultiObjectPropertyList* Arena::Create< ::AFMsg::MultiObjectPropertyList>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::MultiObjectRecordList* Arena::Create< ::AFMsg::MultiObjectRecordList>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ObjectPropertyList* Arena::Create< ::AFMsg::ObjectPropertyList>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ObjectPropertyPBData* Arena::Create< ::AFMsg::ObjectPropertyPBData>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ObjectRecordAddRow* Arena::Create< ::AFMsg::ObjectRecordAddRow>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ObjectRecordBase* Arena::Create< ::AFMsg::ObjectRecordBase>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ObjectRecordList* Arena::Create< ::AFMsg::ObjectRecordList>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ObjectRecordPBData* Arena::Create< ::AFMsg::ObjectRecordPBData>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ObjectRecordRemove* Arena::Create< ::AFMsg::ObjectRecordRemove>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ObjectRecordSwap* Arena::Create< ::AFMsg::ObjectRecordSwap>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::PBData* Arena::Create< ::AFMsg::PBData>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::PlayerPropertyBase* Arena::Create< ::AFMsg::PlayerPropertyBase>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::PlayerRecordBase* Arena::Create< ::AFMsg::PlayerRecordBase>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::PlayerRecordList* Arena::Create< ::AFMsg::PlayerRecordList>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::Point3D* Arena::Create< ::AFMsg::Point3D>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::Position* Arena::Create< ::AFMsg::Position>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::PropertyPBData* Arena::Create< ::AFMsg::PropertyPBData>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::RecordAddRowStruct* Arena::Create< ::AFMsg::RecordAddRowStruct>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::RecordPBData* Arena::Create< ::AFMsg::RecordPBData>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::ReqCommand* Arena::Create< ::AFMsg::ReqCommand>(Arena*);
template<> LIBPROTOC_EXPORT ::AFMsg::VariantData* Arena::Create< ::AFMsg::VariantData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace AFMsg {

enum ReqCommand_EGameCommandType {
  ReqCommand_EGameCommandType_EGCT_MODIY_PROPERTY = 0,
  ReqCommand_EGameCommandType_EGCT_MODIY_ITEM = 1,
  ReqCommand_EGameCommandType_EGCT_CREATE_OBJECT = 2,
  ReqCommand_EGameCommandType_EGCT_ADD_ROLE_EXP = 3,
  ReqCommand_EGameCommandType_ReqCommand_EGameCommandType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReqCommand_EGameCommandType_ReqCommand_EGameCommandType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool ReqCommand_EGameCommandType_IsValid(int value);
const ReqCommand_EGameCommandType ReqCommand_EGameCommandType_EGameCommandType_MIN = ReqCommand_EGameCommandType_EGCT_MODIY_PROPERTY;
const ReqCommand_EGameCommandType ReqCommand_EGameCommandType_EGameCommandType_MAX = ReqCommand_EGameCommandType_EGCT_ADD_ROLE_EXP;
const int ReqCommand_EGameCommandType_EGameCommandType_ARRAYSIZE = ReqCommand_EGameCommandType_EGameCommandType_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* ReqCommand_EGameCommandType_descriptor();
inline const ::std::string& ReqCommand_EGameCommandType_Name(ReqCommand_EGameCommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReqCommand_EGameCommandType_descriptor(), value);
}
inline bool ReqCommand_EGameCommandType_Parse(
    const ::std::string& name, ReqCommand_EGameCommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReqCommand_EGameCommandType>(
    ReqCommand_EGameCommandType_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT Ident : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.Ident) */ {
 public:
  Ident();
  virtual ~Ident();

  Ident(const Ident& from);

  inline Ident& operator=(const Ident& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ident(Ident&& from) noexcept
    : Ident() {
    *this = ::std::move(from);
  }

  inline Ident& operator=(Ident&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ident& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ident* internal_default_instance() {
    return reinterpret_cast<const Ident*>(
               &_Ident_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Ident* other);
  friend void swap(Ident& a, Ident& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ident* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Ident>(NULL);
  }

  Ident* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Ident>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Ident& from);
  void MergeFrom(const Ident& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Ident* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 high = 1;
  void clear_high();
  static const int kHighFieldNumber = 1;
  ::google::protobuf::int64 high() const;
  void set_high(::google::protobuf::int64 value);

  // int64 low = 2;
  void clear_low();
  static const int kLowFieldNumber = 2;
  ::google::protobuf::int64 low() const;
  void set_low(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AFMsg.Ident)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 high_;
  ::google::protobuf::int64 low_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsIdentImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Point3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.Point3D) */ {
 public:
  Point3D();
  virtual ~Point3D();

  Point3D(const Point3D& from);

  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point3D(Point3D&& from) noexcept
    : Point3D() {
    *this = ::std::move(from);
  }

  inline Point3D& operator=(Point3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point3D* internal_default_instance() {
    return reinterpret_cast<const Point3D*>(
               &_Point3D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Point3D* other);
  friend void swap(Point3D& a, Point3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point3D* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Point3D>(NULL);
  }

  Point3D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Point3D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point3D& from);
  void MergeFrom(const Point3D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:AFMsg.Point3D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsPoint3DImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT VariantData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.VariantData) */ {
 public:
  VariantData();
  virtual ~VariantData();

  VariantData(const VariantData& from);

  inline VariantData& operator=(const VariantData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VariantData(VariantData&& from) noexcept
    : VariantData() {
    *this = ::std::move(from);
  }

  inline VariantData& operator=(VariantData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VariantData& default_instance();

  enum AFDataCase {
    kBoolValue = 1,
    kIntValue = 2,
    kInt64Value = 3,
    kFloatValue = 4,
    kDoubleValue = 5,
    kStrValue = 6,
    kGuidValue = 7,
    AFDATA_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VariantData* internal_default_instance() {
    return reinterpret_cast<const VariantData*>(
               &_VariantData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VariantData* other);
  friend void swap(VariantData& a, VariantData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VariantData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<VariantData>(NULL);
  }

  VariantData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<VariantData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VariantData& from);
  void MergeFrom(const VariantData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariantData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool bool_value = 1;
  private:
  bool has_bool_value() const;
  public:
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 1;
  bool bool_value() const;
  void set_bool_value(bool value);

  // int32 int_value = 2;
  private:
  bool has_int_value() const;
  public:
  void clear_int_value();
  static const int kIntValueFieldNumber = 2;
  ::google::protobuf::int32 int_value() const;
  void set_int_value(::google::protobuf::int32 value);

  // int64 int64_value = 3;
  private:
  bool has_int64_value() const;
  public:
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 3;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // float float_value = 4;
  private:
  bool has_float_value() const;
  public:
  void clear_float_value();
  static const int kFloatValueFieldNumber = 4;
  float float_value() const;
  void set_float_value(float value);

  // double double_value = 5;
  private:
  bool has_double_value() const;
  public:
  void clear_double_value();
  static const int kDoubleValueFieldNumber = 5;
  double double_value() const;
  void set_double_value(double value);

  // string str_value = 6;
  private:
  bool has_str_value() const;
  public:
  void clear_str_value();
  static const int kStrValueFieldNumber = 6;
  const ::std::string& str_value() const;
  void set_str_value(const ::std::string& value);
  #if LANG_CXX11
  void set_str_value(::std::string&& value);
  #endif
  void set_str_value(const char* value);
  void set_str_value(const char* value, size_t size);
  ::std::string* mutable_str_value();
  ::std::string* release_str_value();
  void set_allocated_str_value(::std::string* str_value);

  // .AFMsg.Ident guid_value = 7;
  bool has_guid_value() const;
  void clear_guid_value();
  static const int kGuidValueFieldNumber = 7;
  const ::AFMsg::Ident& guid_value() const;
  ::AFMsg::Ident* release_guid_value();
  ::AFMsg::Ident* mutable_guid_value();
  void set_allocated_guid_value(::AFMsg::Ident* guid_value);

  AFDataCase AFData_case() const;
  // @@protoc_insertion_point(class_scope:AFMsg.VariantData)
 private:
  void set_has_bool_value();
  void set_has_int_value();
  void set_has_int64_value();
  void set_has_float_value();
  void set_has_double_value();
  void set_has_str_value();
  void set_has_guid_value();

  inline bool has_AFData() const;
  void clear_AFData();
  inline void clear_has_AFData();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union AFDataUnion {
    AFDataUnion() {}
    bool bool_value_;
    ::google::protobuf::int32 int_value_;
    ::google::protobuf::int64 int64_value_;
    float float_value_;
    double double_value_;
    ::google::protobuf::internal::ArenaStringPtr str_value_;
    ::AFMsg::Ident* guid_value_;
  } AFData_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsVariantDataImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PropertyPBData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.PropertyPBData) */ {
 public:
  PropertyPBData();
  virtual ~PropertyPBData();

  PropertyPBData(const PropertyPBData& from);

  inline PropertyPBData& operator=(const PropertyPBData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PropertyPBData(PropertyPBData&& from) noexcept
    : PropertyPBData() {
    *this = ::std::move(from);
  }

  inline PropertyPBData& operator=(PropertyPBData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyPBData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PropertyPBData* internal_default_instance() {
    return reinterpret_cast<const PropertyPBData*>(
               &_PropertyPBData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PropertyPBData* other);
  friend void swap(PropertyPBData& a, PropertyPBData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PropertyPBData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PropertyPBData>(NULL);
  }

  PropertyPBData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PropertyPBData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PropertyPBData& from);
  void MergeFrom(const PropertyPBData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PropertyPBData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string property_name = 1;
  void clear_property_name();
  static const int kPropertyNameFieldNumber = 1;
  const ::std::string& property_name() const;
  void set_property_name(const ::std::string& value);
  #if LANG_CXX11
  void set_property_name(::std::string&& value);
  #endif
  void set_property_name(const char* value);
  void set_property_name(const char* value, size_t size);
  ::std::string* mutable_property_name();
  ::std::string* release_property_name();
  void set_allocated_property_name(::std::string* property_name);

  // .AFMsg.VariantData variant_data = 3;
  bool has_variant_data() const;
  void clear_variant_data();
  static const int kVariantDataFieldNumber = 3;
  const ::AFMsg::VariantData& variant_data() const;
  ::AFMsg::VariantData* release_variant_data();
  ::AFMsg::VariantData* mutable_variant_data();
  void set_allocated_variant_data(::AFMsg::VariantData* variant_data);

  // int32 ndataType = 2;
  void clear_ndatatype();
  static const int kNdataTypeFieldNumber = 2;
  ::google::protobuf::int32 ndatatype() const;
  void set_ndatatype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AFMsg.PropertyPBData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr property_name_;
  ::AFMsg::VariantData* variant_data_;
  ::google::protobuf::int32 ndatatype_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsPropertyPBDataImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT RecordPBData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.RecordPBData) */ {
 public:
  RecordPBData();
  virtual ~RecordPBData();

  RecordPBData(const RecordPBData& from);

  inline RecordPBData& operator=(const RecordPBData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecordPBData(RecordPBData&& from) noexcept
    : RecordPBData() {
    *this = ::std::move(from);
  }

  inline RecordPBData& operator=(RecordPBData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecordPBData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecordPBData* internal_default_instance() {
    return reinterpret_cast<const RecordPBData*>(
               &_RecordPBData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RecordPBData* other);
  friend void swap(RecordPBData& a, RecordPBData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecordPBData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<RecordPBData>(NULL);
  }

  RecordPBData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<RecordPBData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecordPBData& from);
  void MergeFrom(const RecordPBData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecordPBData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .AFMsg.VariantData variant_data = 4;
  bool has_variant_data() const;
  void clear_variant_data();
  static const int kVariantDataFieldNumber = 4;
  const ::AFMsg::VariantData& variant_data() const;
  ::AFMsg::VariantData* release_variant_data();
  ::AFMsg::VariantData* mutable_variant_data();
  void set_allocated_variant_data(::AFMsg::VariantData* variant_data);

  // int32 row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  ::google::protobuf::int32 row() const;
  void set_row(::google::protobuf::int32 value);

  // int32 col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  ::google::protobuf::int32 col() const;
  void set_col(::google::protobuf::int32 value);

  // int32 ndataType = 3;
  void clear_ndatatype();
  static const int kNdataTypeFieldNumber = 3;
  ::google::protobuf::int32 ndatatype() const;
  void set_ndatatype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AFMsg.RecordPBData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AFMsg::VariantData* variant_data_;
  ::google::protobuf::int32 row_;
  ::google::protobuf::int32 col_;
  ::google::protobuf::int32 ndatatype_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsRecordPBDataImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.PBData) */ {
 public:
  PBData();
  virtual ~PBData();

  PBData(const PBData& from);

  inline PBData& operator=(const PBData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBData(PBData&& from) noexcept
    : PBData() {
    *this = ::std::move(from);
  }

  inline PBData& operator=(PBData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBData* internal_default_instance() {
    return reinterpret_cast<const PBData*>(
               &_PBData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PBData* other);
  friend void swap(PBData& a, PBData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PBData>(NULL);
  }

  PBData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PBData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBData& from);
  void MergeFrom(const PBData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .AFMsg.VariantData variant_data = 2;
  bool has_variant_data() const;
  void clear_variant_data();
  static const int kVariantDataFieldNumber = 2;
  const ::AFMsg::VariantData& variant_data() const;
  ::AFMsg::VariantData* release_variant_data();
  ::AFMsg::VariantData* mutable_variant_data();
  void set_allocated_variant_data(::AFMsg::VariantData* variant_data);

  // int32 ndataType = 1;
  void clear_ndatatype();
  static const int kNdataTypeFieldNumber = 1;
  ::google::protobuf::int32 ndatatype() const;
  void set_ndatatype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AFMsg.PBData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AFMsg::VariantData* variant_data_;
  ::google::protobuf::int32 ndatatype_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsPBDataImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT DataListPBData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.DataListPBData) */ {
 public:
  DataListPBData();
  virtual ~DataListPBData();

  DataListPBData(const DataListPBData& from);

  inline DataListPBData& operator=(const DataListPBData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataListPBData(DataListPBData&& from) noexcept
    : DataListPBData() {
    *this = ::std::move(from);
  }

  inline DataListPBData& operator=(DataListPBData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataListPBData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataListPBData* internal_default_instance() {
    return reinterpret_cast<const DataListPBData*>(
               &_DataListPBData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DataListPBData* other);
  friend void swap(DataListPBData& a, DataListPBData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataListPBData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<DataListPBData>(NULL);
  }

  DataListPBData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<DataListPBData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataListPBData& from);
  void MergeFrom(const DataListPBData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataListPBData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.PBData data_list = 1;
  int data_list_size() const;
  void clear_data_list();
  static const int kDataListFieldNumber = 1;
  ::AFMsg::PBData* mutable_data_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PBData >*
      mutable_data_list();
  const ::AFMsg::PBData& data_list(int index) const;
  ::AFMsg::PBData* add_data_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::PBData >&
      data_list() const;

  // @@protoc_insertion_point(class_scope:AFMsg.DataListPBData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PBData > data_list_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsDataListPBDataImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT RecordAddRowStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.RecordAddRowStruct) */ {
 public:
  RecordAddRowStruct();
  virtual ~RecordAddRowStruct();

  RecordAddRowStruct(const RecordAddRowStruct& from);

  inline RecordAddRowStruct& operator=(const RecordAddRowStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecordAddRowStruct(RecordAddRowStruct&& from) noexcept
    : RecordAddRowStruct() {
    *this = ::std::move(from);
  }

  inline RecordAddRowStruct& operator=(RecordAddRowStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecordAddRowStruct& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecordAddRowStruct* internal_default_instance() {
    return reinterpret_cast<const RecordAddRowStruct*>(
               &_RecordAddRowStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(RecordAddRowStruct* other);
  friend void swap(RecordAddRowStruct& a, RecordAddRowStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecordAddRowStruct* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<RecordAddRowStruct>(NULL);
  }

  RecordAddRowStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<RecordAddRowStruct>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecordAddRowStruct& from);
  void MergeFrom(const RecordAddRowStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecordAddRowStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  int record_data_list_size() const;
  void clear_record_data_list();
  static const int kRecordDataListFieldNumber = 2;
  ::AFMsg::RecordPBData* mutable_record_data_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
      mutable_record_data_list();
  const ::AFMsg::RecordPBData& record_data_list(int index) const;
  ::AFMsg::RecordPBData* add_record_data_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
      record_data_list() const;

  // int32 row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  ::google::protobuf::int32 row() const;
  void set_row(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AFMsg.RecordAddRowStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData > record_data_list_;
  ::google::protobuf::int32 row_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsRecordAddRowStructImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ObjectRecordBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ObjectRecordBase) */ {
 public:
  ObjectRecordBase();
  virtual ~ObjectRecordBase();

  ObjectRecordBase(const ObjectRecordBase& from);

  inline ObjectRecordBase& operator=(const ObjectRecordBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectRecordBase(ObjectRecordBase&& from) noexcept
    : ObjectRecordBase() {
    *this = ::std::move(from);
  }

  inline ObjectRecordBase& operator=(ObjectRecordBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectRecordBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectRecordBase* internal_default_instance() {
    return reinterpret_cast<const ObjectRecordBase*>(
               &_ObjectRecordBase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ObjectRecordBase* other);
  friend void swap(ObjectRecordBase& a, ObjectRecordBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectRecordBase* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordBase>(NULL);
  }

  ObjectRecordBase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectRecordBase& from);
  void MergeFrom(const ObjectRecordBase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectRecordBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
  int row_struct_size() const;
  void clear_row_struct();
  static const int kRowStructFieldNumber = 2;
  ::AFMsg::RecordAddRowStruct* mutable_row_struct(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >*
      mutable_row_struct();
  const ::AFMsg::RecordAddRowStruct& row_struct(int index) const;
  ::AFMsg::RecordAddRowStruct* add_row_struct();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >&
      row_struct() const;

  // string record_name = 1;
  void clear_record_name();
  static const int kRecordNameFieldNumber = 1;
  const ::std::string& record_name() const;
  void set_record_name(const ::std::string& value);
  #if LANG_CXX11
  void set_record_name(::std::string&& value);
  #endif
  void set_record_name(const char* value);
  void set_record_name(const char* value, size_t size);
  ::std::string* mutable_record_name();
  ::std::string* release_record_name();
  void set_allocated_record_name(::std::string* record_name);

  // @@protoc_insertion_point(class_scope:AFMsg.ObjectRecordBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct > row_struct_;
  ::google::protobuf::internal::ArenaStringPtr record_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordBaseImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ObjectPropertyList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ObjectPropertyList) */ {
 public:
  ObjectPropertyList();
  virtual ~ObjectPropertyList();

  ObjectPropertyList(const ObjectPropertyList& from);

  inline ObjectPropertyList& operator=(const ObjectPropertyList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectPropertyList(ObjectPropertyList&& from) noexcept
    : ObjectPropertyList() {
    *this = ::std::move(from);
  }

  inline ObjectPropertyList& operator=(ObjectPropertyList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectPropertyList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectPropertyList* internal_default_instance() {
    return reinterpret_cast<const ObjectPropertyList*>(
               &_ObjectPropertyList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ObjectPropertyList* other);
  friend void swap(ObjectPropertyList& a, ObjectPropertyList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectPropertyList* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectPropertyList>(NULL);
  }

  ObjectPropertyList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectPropertyList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectPropertyList& from);
  void MergeFrom(const ObjectPropertyList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectPropertyList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.PropertyPBData property_data_list = 2;
  int property_data_list_size() const;
  void clear_property_data_list();
  static const int kPropertyDataListFieldNumber = 2;
  ::AFMsg::PropertyPBData* mutable_property_data_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
      mutable_property_data_list();
  const ::AFMsg::PropertyPBData& property_data_list(int index) const;
  ::AFMsg::PropertyPBData* add_property_data_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
      property_data_list() const;

  // .AFMsg.Ident player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::AFMsg::Ident& player_id() const;
  ::AFMsg::Ident* release_player_id();
  ::AFMsg::Ident* mutable_player_id();
  void set_allocated_player_id(::AFMsg::Ident* player_id);

  // @@protoc_insertion_point(class_scope:AFMsg.ObjectPropertyList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData > property_data_list_;
  ::AFMsg::Ident* player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectPropertyListImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MultiObjectPropertyList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.MultiObjectPropertyList) */ {
 public:
  MultiObjectPropertyList();
  virtual ~MultiObjectPropertyList();

  MultiObjectPropertyList(const MultiObjectPropertyList& from);

  inline MultiObjectPropertyList& operator=(const MultiObjectPropertyList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultiObjectPropertyList(MultiObjectPropertyList&& from) noexcept
    : MultiObjectPropertyList() {
    *this = ::std::move(from);
  }

  inline MultiObjectPropertyList& operator=(MultiObjectPropertyList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultiObjectPropertyList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MultiObjectPropertyList* internal_default_instance() {
    return reinterpret_cast<const MultiObjectPropertyList*>(
               &_MultiObjectPropertyList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(MultiObjectPropertyList* other);
  friend void swap(MultiObjectPropertyList& a, MultiObjectPropertyList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultiObjectPropertyList* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MultiObjectPropertyList>(NULL);
  }

  MultiObjectPropertyList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MultiObjectPropertyList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultiObjectPropertyList& from);
  void MergeFrom(const MultiObjectPropertyList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultiObjectPropertyList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
  int multi_player_property_size() const;
  void clear_multi_player_property();
  static const int kMultiPlayerPropertyFieldNumber = 1;
  ::AFMsg::ObjectPropertyList* mutable_multi_player_property(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectPropertyList >*
      mutable_multi_player_property();
  const ::AFMsg::ObjectPropertyList& multi_player_property(int index) const;
  ::AFMsg::ObjectPropertyList* add_multi_player_property();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectPropertyList >&
      multi_player_property() const;

  // @@protoc_insertion_point(class_scope:AFMsg.MultiObjectPropertyList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectPropertyList > multi_player_property_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsMultiObjectPropertyListImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ObjectRecordList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ObjectRecordList) */ {
 public:
  ObjectRecordList();
  virtual ~ObjectRecordList();

  ObjectRecordList(const ObjectRecordList& from);

  inline ObjectRecordList& operator=(const ObjectRecordList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectRecordList(ObjectRecordList&& from) noexcept
    : ObjectRecordList() {
    *this = ::std::move(from);
  }

  inline ObjectRecordList& operator=(ObjectRecordList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectRecordList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectRecordList* internal_default_instance() {
    return reinterpret_cast<const ObjectRecordList*>(
               &_ObjectRecordList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ObjectRecordList* other);
  friend void swap(ObjectRecordList& a, ObjectRecordList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectRecordList* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordList>(NULL);
  }

  ObjectRecordList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectRecordList& from);
  void MergeFrom(const ObjectRecordList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectRecordList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.ObjectRecordBase record_list = 2;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 2;
  ::AFMsg::ObjectRecordBase* mutable_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordBase >*
      mutable_record_list();
  const ::AFMsg::ObjectRecordBase& record_list(int index) const;
  ::AFMsg::ObjectRecordBase* add_record_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordBase >&
      record_list() const;

  // .AFMsg.Ident player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::AFMsg::Ident& player_id() const;
  ::AFMsg::Ident* release_player_id();
  ::AFMsg::Ident* mutable_player_id();
  void set_allocated_player_id(::AFMsg::Ident* player_id);

  // @@protoc_insertion_point(class_scope:AFMsg.ObjectRecordList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordBase > record_list_;
  ::AFMsg::Ident* player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordListImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MultiObjectRecordList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.MultiObjectRecordList) */ {
 public:
  MultiObjectRecordList();
  virtual ~MultiObjectRecordList();

  MultiObjectRecordList(const MultiObjectRecordList& from);

  inline MultiObjectRecordList& operator=(const MultiObjectRecordList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultiObjectRecordList(MultiObjectRecordList&& from) noexcept
    : MultiObjectRecordList() {
    *this = ::std::move(from);
  }

  inline MultiObjectRecordList& operator=(MultiObjectRecordList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultiObjectRecordList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MultiObjectRecordList* internal_default_instance() {
    return reinterpret_cast<const MultiObjectRecordList*>(
               &_MultiObjectRecordList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(MultiObjectRecordList* other);
  friend void swap(MultiObjectRecordList& a, MultiObjectRecordList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultiObjectRecordList* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MultiObjectRecordList>(NULL);
  }

  MultiObjectRecordList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MultiObjectRecordList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultiObjectRecordList& from);
  void MergeFrom(const MultiObjectRecordList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultiObjectRecordList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
  int multi_player_record_size() const;
  void clear_multi_player_record();
  static const int kMultiPlayerRecordFieldNumber = 1;
  ::AFMsg::ObjectRecordList* mutable_multi_player_record(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordList >*
      mutable_multi_player_record();
  const ::AFMsg::ObjectRecordList& multi_player_record(int index) const;
  ::AFMsg::ObjectRecordList* add_multi_player_record();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordList >&
      multi_player_record() const;

  // @@protoc_insertion_point(class_scope:AFMsg.MultiObjectRecordList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordList > multi_player_record_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsMultiObjectRecordListImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ObjectPropertyPBData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ObjectPropertyPBData) */ {
 public:
  ObjectPropertyPBData();
  virtual ~ObjectPropertyPBData();

  ObjectPropertyPBData(const ObjectPropertyPBData& from);

  inline ObjectPropertyPBData& operator=(const ObjectPropertyPBData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectPropertyPBData(ObjectPropertyPBData&& from) noexcept
    : ObjectPropertyPBData() {
    *this = ::std::move(from);
  }

  inline ObjectPropertyPBData& operator=(ObjectPropertyPBData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectPropertyPBData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectPropertyPBData* internal_default_instance() {
    return reinterpret_cast<const ObjectPropertyPBData*>(
               &_ObjectPropertyPBData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ObjectPropertyPBData* other);
  friend void swap(ObjectPropertyPBData& a, ObjectPropertyPBData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectPropertyPBData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectPropertyPBData>(NULL);
  }

  ObjectPropertyPBData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectPropertyPBData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectPropertyPBData& from);
  void MergeFrom(const ObjectPropertyPBData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectPropertyPBData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.PropertyPBData property_list = 2;
  int property_list_size() const;
  void clear_property_list();
  static const int kPropertyListFieldNumber = 2;
  ::AFMsg::PropertyPBData* mutable_property_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
      mutable_property_list();
  const ::AFMsg::PropertyPBData& property_list(int index) const;
  ::AFMsg::PropertyPBData* add_property_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
      property_list() const;

  // .AFMsg.Ident player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::AFMsg::Ident& player_id() const;
  ::AFMsg::Ident* release_player_id();
  ::AFMsg::Ident* mutable_player_id();
  void set_allocated_player_id(::AFMsg::Ident* player_id);

  // @@protoc_insertion_point(class_scope:AFMsg.ObjectPropertyPBData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData > property_list_;
  ::AFMsg::Ident* player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectPropertyPBDataImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ObjectRecordPBData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ObjectRecordPBData) */ {
 public:
  ObjectRecordPBData();
  virtual ~ObjectRecordPBData();

  ObjectRecordPBData(const ObjectRecordPBData& from);

  inline ObjectRecordPBData& operator=(const ObjectRecordPBData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectRecordPBData(ObjectRecordPBData&& from) noexcept
    : ObjectRecordPBData() {
    *this = ::std::move(from);
  }

  inline ObjectRecordPBData& operator=(ObjectRecordPBData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectRecordPBData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectRecordPBData* internal_default_instance() {
    return reinterpret_cast<const ObjectRecordPBData*>(
               &_ObjectRecordPBData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ObjectRecordPBData* other);
  friend void swap(ObjectRecordPBData& a, ObjectRecordPBData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectRecordPBData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordPBData>(NULL);
  }

  ObjectRecordPBData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordPBData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectRecordPBData& from);
  void MergeFrom(const ObjectRecordPBData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectRecordPBData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.RecordPBData record_list = 3;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 3;
  ::AFMsg::RecordPBData* mutable_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
      mutable_record_list();
  const ::AFMsg::RecordPBData& record_list(int index) const;
  ::AFMsg::RecordPBData* add_record_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
      record_list() const;

  // string record_name = 2;
  void clear_record_name();
  static const int kRecordNameFieldNumber = 2;
  const ::std::string& record_name() const;
  void set_record_name(const ::std::string& value);
  #if LANG_CXX11
  void set_record_name(::std::string&& value);
  #endif
  void set_record_name(const char* value);
  void set_record_name(const char* value, size_t size);
  ::std::string* mutable_record_name();
  ::std::string* release_record_name();
  void set_allocated_record_name(::std::string* record_name);

  // .AFMsg.Ident player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::AFMsg::Ident& player_id() const;
  ::AFMsg::Ident* release_player_id();
  ::AFMsg::Ident* mutable_player_id();
  void set_allocated_player_id(::AFMsg::Ident* player_id);

  // @@protoc_insertion_point(class_scope:AFMsg.ObjectRecordPBData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData > record_list_;
  ::google::protobuf::internal::ArenaStringPtr record_name_;
  ::AFMsg::Ident* player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordPBDataImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ObjectRecordSwap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ObjectRecordSwap) */ {
 public:
  ObjectRecordSwap();
  virtual ~ObjectRecordSwap();

  ObjectRecordSwap(const ObjectRecordSwap& from);

  inline ObjectRecordSwap& operator=(const ObjectRecordSwap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectRecordSwap(ObjectRecordSwap&& from) noexcept
    : ObjectRecordSwap() {
    *this = ::std::move(from);
  }

  inline ObjectRecordSwap& operator=(ObjectRecordSwap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectRecordSwap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectRecordSwap* internal_default_instance() {
    return reinterpret_cast<const ObjectRecordSwap*>(
               &_ObjectRecordSwap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ObjectRecordSwap* other);
  friend void swap(ObjectRecordSwap& a, ObjectRecordSwap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectRecordSwap* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordSwap>(NULL);
  }

  ObjectRecordSwap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordSwap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectRecordSwap& from);
  void MergeFrom(const ObjectRecordSwap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectRecordSwap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string origin_record_name = 2;
  void clear_origin_record_name();
  static const int kOriginRecordNameFieldNumber = 2;
  const ::std::string& origin_record_name() const;
  void set_origin_record_name(const ::std::string& value);
  #if LANG_CXX11
  void set_origin_record_name(::std::string&& value);
  #endif
  void set_origin_record_name(const char* value);
  void set_origin_record_name(const char* value, size_t size);
  ::std::string* mutable_origin_record_name();
  ::std::string* release_origin_record_name();
  void set_allocated_origin_record_name(::std::string* origin_record_name);

  // string target_record_name = 3;
  void clear_target_record_name();
  static const int kTargetRecordNameFieldNumber = 3;
  const ::std::string& target_record_name() const;
  void set_target_record_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_record_name(::std::string&& value);
  #endif
  void set_target_record_name(const char* value);
  void set_target_record_name(const char* value, size_t size);
  ::std::string* mutable_target_record_name();
  ::std::string* release_target_record_name();
  void set_allocated_target_record_name(::std::string* target_record_name);

  // .AFMsg.Ident player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::AFMsg::Ident& player_id() const;
  ::AFMsg::Ident* release_player_id();
  ::AFMsg::Ident* mutable_player_id();
  void set_allocated_player_id(::AFMsg::Ident* player_id);

  // int32 row_origin = 4;
  void clear_row_origin();
  static const int kRowOriginFieldNumber = 4;
  ::google::protobuf::int32 row_origin() const;
  void set_row_origin(::google::protobuf::int32 value);

  // int32 row_target = 5;
  void clear_row_target();
  static const int kRowTargetFieldNumber = 5;
  ::google::protobuf::int32 row_target() const;
  void set_row_target(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AFMsg.ObjectRecordSwap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr origin_record_name_;
  ::google::protobuf::internal::ArenaStringPtr target_record_name_;
  ::AFMsg::Ident* player_id_;
  ::google::protobuf::int32 row_origin_;
  ::google::protobuf::int32 row_target_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordSwapImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ObjectRecordAddRow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ObjectRecordAddRow) */ {
 public:
  ObjectRecordAddRow();
  virtual ~ObjectRecordAddRow();

  ObjectRecordAddRow(const ObjectRecordAddRow& from);

  inline ObjectRecordAddRow& operator=(const ObjectRecordAddRow& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectRecordAddRow(ObjectRecordAddRow&& from) noexcept
    : ObjectRecordAddRow() {
    *this = ::std::move(from);
  }

  inline ObjectRecordAddRow& operator=(ObjectRecordAddRow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectRecordAddRow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectRecordAddRow* internal_default_instance() {
    return reinterpret_cast<const ObjectRecordAddRow*>(
               &_ObjectRecordAddRow_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ObjectRecordAddRow* other);
  friend void swap(ObjectRecordAddRow& a, ObjectRecordAddRow& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectRecordAddRow* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordAddRow>(NULL);
  }

  ObjectRecordAddRow* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordAddRow>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectRecordAddRow& from);
  void MergeFrom(const ObjectRecordAddRow& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectRecordAddRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.RecordAddRowStruct row_data = 3;
  int row_data_size() const;
  void clear_row_data();
  static const int kRowDataFieldNumber = 3;
  ::AFMsg::RecordAddRowStruct* mutable_row_data(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >*
      mutable_row_data();
  const ::AFMsg::RecordAddRowStruct& row_data(int index) const;
  ::AFMsg::RecordAddRowStruct* add_row_data();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >&
      row_data() const;

  // string record_name = 2;
  void clear_record_name();
  static const int kRecordNameFieldNumber = 2;
  const ::std::string& record_name() const;
  void set_record_name(const ::std::string& value);
  #if LANG_CXX11
  void set_record_name(::std::string&& value);
  #endif
  void set_record_name(const char* value);
  void set_record_name(const char* value, size_t size);
  ::std::string* mutable_record_name();
  ::std::string* release_record_name();
  void set_allocated_record_name(::std::string* record_name);

  // .AFMsg.Ident player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::AFMsg::Ident& player_id() const;
  ::AFMsg::Ident* release_player_id();
  ::AFMsg::Ident* mutable_player_id();
  void set_allocated_player_id(::AFMsg::Ident* player_id);

  // @@protoc_insertion_point(class_scope:AFMsg.ObjectRecordAddRow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct > row_data_;
  ::google::protobuf::internal::ArenaStringPtr record_name_;
  ::AFMsg::Ident* player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordAddRowImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ObjectRecordRemove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ObjectRecordRemove) */ {
 public:
  ObjectRecordRemove();
  virtual ~ObjectRecordRemove();

  ObjectRecordRemove(const ObjectRecordRemove& from);

  inline ObjectRecordRemove& operator=(const ObjectRecordRemove& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectRecordRemove(ObjectRecordRemove&& from) noexcept
    : ObjectRecordRemove() {
    *this = ::std::move(from);
  }

  inline ObjectRecordRemove& operator=(ObjectRecordRemove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectRecordRemove& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectRecordRemove* internal_default_instance() {
    return reinterpret_cast<const ObjectRecordRemove*>(
               &_ObjectRecordRemove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ObjectRecordRemove* other);
  friend void swap(ObjectRecordRemove& a, ObjectRecordRemove& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectRecordRemove* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordRemove>(NULL);
  }

  ObjectRecordRemove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ObjectRecordRemove>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjectRecordRemove& from);
  void MergeFrom(const ObjectRecordRemove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjectRecordRemove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 remove_row = 3;
  int remove_row_size() const;
  void clear_remove_row();
  static const int kRemoveRowFieldNumber = 3;
  ::google::protobuf::int32 remove_row(int index) const;
  void set_remove_row(int index, ::google::protobuf::int32 value);
  void add_remove_row(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      remove_row() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_remove_row();

  // string record_name = 2;
  void clear_record_name();
  static const int kRecordNameFieldNumber = 2;
  const ::std::string& record_name() const;
  void set_record_name(const ::std::string& value);
  #if LANG_CXX11
  void set_record_name(::std::string&& value);
  #endif
  void set_record_name(const char* value);
  void set_record_name(const char* value, size_t size);
  ::std::string* mutable_record_name();
  ::std::string* release_record_name();
  void set_allocated_record_name(::std::string* record_name);

  // .AFMsg.Ident player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::AFMsg::Ident& player_id() const;
  ::AFMsg::Ident* release_player_id();
  ::AFMsg::Ident* mutable_player_id();
  void set_allocated_player_id(::AFMsg::Ident* player_id);

  // @@protoc_insertion_point(class_scope:AFMsg.ObjectRecordRemove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > remove_row_;
  mutable int _remove_row_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr record_name_;
  ::AFMsg::Ident* player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsObjectRecordRemoveImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PlayerPropertyBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.PlayerPropertyBase) */ {
 public:
  PlayerPropertyBase();
  virtual ~PlayerPropertyBase();

  PlayerPropertyBase(const PlayerPropertyBase& from);

  inline PlayerPropertyBase& operator=(const PlayerPropertyBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPropertyBase(PlayerPropertyBase&& from) noexcept
    : PlayerPropertyBase() {
    *this = ::std::move(from);
  }

  inline PlayerPropertyBase& operator=(PlayerPropertyBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPropertyBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPropertyBase* internal_default_instance() {
    return reinterpret_cast<const PlayerPropertyBase*>(
               &_PlayerPropertyBase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PlayerPropertyBase* other);
  friend void swap(PlayerPropertyBase& a, PlayerPropertyBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPropertyBase* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlayerPropertyBase>(NULL);
  }

  PlayerPropertyBase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlayerPropertyBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPropertyBase& from);
  void MergeFrom(const PlayerPropertyBase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPropertyBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.PropertyPBData property_data_list = 1;
  int property_data_list_size() const;
  void clear_property_data_list();
  static const int kPropertyDataListFieldNumber = 1;
  ::AFMsg::PropertyPBData* mutable_property_data_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
      mutable_property_data_list();
  const ::AFMsg::PropertyPBData& property_data_list(int index) const;
  ::AFMsg::PropertyPBData* add_property_data_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
      property_data_list() const;

  // @@protoc_insertion_point(class_scope:AFMsg.PlayerPropertyBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData > property_data_list_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerPropertyBaseImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PlayerRecordBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.PlayerRecordBase) */ {
 public:
  PlayerRecordBase();
  virtual ~PlayerRecordBase();

  PlayerRecordBase(const PlayerRecordBase& from);

  inline PlayerRecordBase& operator=(const PlayerRecordBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRecordBase(PlayerRecordBase&& from) noexcept
    : PlayerRecordBase() {
    *this = ::std::move(from);
  }

  inline PlayerRecordBase& operator=(PlayerRecordBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRecordBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerRecordBase* internal_default_instance() {
    return reinterpret_cast<const PlayerRecordBase*>(
               &_PlayerRecordBase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(PlayerRecordBase* other);
  friend void swap(PlayerRecordBase& a, PlayerRecordBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRecordBase* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlayerRecordBase>(NULL);
  }

  PlayerRecordBase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlayerRecordBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRecordBase& from);
  void MergeFrom(const PlayerRecordBase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRecordBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  int record_data_list_size() const;
  void clear_record_data_list();
  static const int kRecordDataListFieldNumber = 2;
  ::AFMsg::RecordPBData* mutable_record_data_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
      mutable_record_data_list();
  const ::AFMsg::RecordPBData& record_data_list(int index) const;
  ::AFMsg::RecordPBData* add_record_data_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
      record_data_list() const;

  // string record_name = 1;
  void clear_record_name();
  static const int kRecordNameFieldNumber = 1;
  const ::std::string& record_name() const;
  void set_record_name(const ::std::string& value);
  #if LANG_CXX11
  void set_record_name(::std::string&& value);
  #endif
  void set_record_name(const char* value);
  void set_record_name(const char* value, size_t size);
  ::std::string* mutable_record_name();
  ::std::string* release_record_name();
  void set_allocated_record_name(::std::string* record_name);

  // @@protoc_insertion_point(class_scope:AFMsg.PlayerRecordBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData > record_data_list_;
  ::google::protobuf::internal::ArenaStringPtr record_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerRecordBaseImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PlayerRecordList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.PlayerRecordList) */ {
 public:
  PlayerRecordList();
  virtual ~PlayerRecordList();

  PlayerRecordList(const PlayerRecordList& from);

  inline PlayerRecordList& operator=(const PlayerRecordList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRecordList(PlayerRecordList&& from) noexcept
    : PlayerRecordList() {
    *this = ::std::move(from);
  }

  inline PlayerRecordList& operator=(PlayerRecordList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRecordList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerRecordList* internal_default_instance() {
    return reinterpret_cast<const PlayerRecordList*>(
               &_PlayerRecordList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(PlayerRecordList* other);
  friend void swap(PlayerRecordList& a, PlayerRecordList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRecordList* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlayerRecordList>(NULL);
  }

  PlayerRecordList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlayerRecordList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRecordList& from);
  void MergeFrom(const PlayerRecordList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRecordList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.PlayerRecordBase record_list = 1;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 1;
  ::AFMsg::PlayerRecordBase* mutable_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PlayerRecordBase >*
      mutable_record_list();
  const ::AFMsg::PlayerRecordBase& record_list(int index) const;
  ::AFMsg::PlayerRecordBase* add_record_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::PlayerRecordBase >&
      record_list() const;

  // @@protoc_insertion_point(class_scope:AFMsg.PlayerRecordList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::PlayerRecordBase > record_list_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsPlayerRecordListImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT BrocastMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.BrocastMsg) */ {
 public:
  BrocastMsg();
  virtual ~BrocastMsg();

  BrocastMsg(const BrocastMsg& from);

  inline BrocastMsg& operator=(const BrocastMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrocastMsg(BrocastMsg&& from) noexcept
    : BrocastMsg() {
    *this = ::std::move(from);
  }

  inline BrocastMsg& operator=(BrocastMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrocastMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BrocastMsg* internal_default_instance() {
    return reinterpret_cast<const BrocastMsg*>(
               &_BrocastMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(BrocastMsg* other);
  friend void swap(BrocastMsg& a, BrocastMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrocastMsg* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<BrocastMsg>(NULL);
  }

  BrocastMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<BrocastMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrocastMsg& from);
  void MergeFrom(const BrocastMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrocastMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AFMsg.Ident player_Client_list = 4;
  int player_client_list_size() const;
  void clear_player_client_list();
  static const int kPlayerClientListFieldNumber = 4;
  ::AFMsg::Ident* mutable_player_client_list(int index);
  ::google::protobuf::RepeatedPtrField< ::AFMsg::Ident >*
      mutable_player_client_list();
  const ::AFMsg::Ident& player_client_list(int index) const;
  ::AFMsg::Ident* add_player_client_list();
  const ::google::protobuf::RepeatedPtrField< ::AFMsg::Ident >&
      player_client_list() const;

  // string msg_data = 2;
  void clear_msg_data();
  static const int kMsgDataFieldNumber = 2;
  const ::std::string& msg_data() const;
  void set_msg_data(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_data(::std::string&& value);
  #endif
  void set_msg_data(const char* value);
  void set_msg_data(const char* value, size_t size);
  ::std::string* mutable_msg_data();
  ::std::string* release_msg_data();
  void set_allocated_msg_data(::std::string* msg_data);

  // .AFMsg.Ident player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::AFMsg::Ident& player_id() const;
  ::AFMsg::Ident* release_player_id();
  ::AFMsg::Ident* mutable_player_id();
  void set_allocated_player_id(::AFMsg::Ident* player_id);

  // int64 nMsgID = 3;
  void clear_nmsgid();
  static const int kNMsgIDFieldNumber = 3;
  ::google::protobuf::int64 nmsgid() const;
  void set_nmsgid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AFMsg.BrocastMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AFMsg::Ident > player_client_list_;
  ::google::protobuf::internal::ArenaStringPtr msg_data_;
  ::AFMsg::Ident* player_id_;
  ::google::protobuf::int64 nmsgid_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsBrocastMsgImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(Position* other);
  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Position>(NULL);
  }

  Position* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Position>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:AFMsg.Position)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsPositionImpl();
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT ReqCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AFMsg.ReqCommand) */ {
 public:
  ReqCommand();
  virtual ~ReqCommand();

  ReqCommand(const ReqCommand& from);

  inline ReqCommand& operator=(const ReqCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCommand(ReqCommand&& from) noexcept
    : ReqCommand() {
    *this = ::std::move(from);
  }

  inline ReqCommand& operator=(ReqCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCommand* internal_default_instance() {
    return reinterpret_cast<const ReqCommand*>(
               &_ReqCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ReqCommand* other);
  friend void swap(ReqCommand& a, ReqCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCommand* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ReqCommand>(NULL);
  }

  ReqCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ReqCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqCommand& from);
  void MergeFrom(const ReqCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReqCommand_EGameCommandType EGameCommandType;
  static const EGameCommandType EGCT_MODIY_PROPERTY =
    ReqCommand_EGameCommandType_EGCT_MODIY_PROPERTY;
  static const EGameCommandType EGCT_MODIY_ITEM =
    ReqCommand_EGameCommandType_EGCT_MODIY_ITEM;
  static const EGameCommandType EGCT_CREATE_OBJECT =
    ReqCommand_EGameCommandType_EGCT_CREATE_OBJECT;
  static const EGameCommandType EGCT_ADD_ROLE_EXP =
    ReqCommand_EGameCommandType_EGCT_ADD_ROLE_EXP;
  static inline bool EGameCommandType_IsValid(int value) {
    return ReqCommand_EGameCommandType_IsValid(value);
  }
  static const EGameCommandType EGameCommandType_MIN =
    ReqCommand_EGameCommandType_EGameCommandType_MIN;
  static const EGameCommandType EGameCommandType_MAX =
    ReqCommand_EGameCommandType_EGameCommandType_MAX;
  static const int EGameCommandType_ARRAYSIZE =
    ReqCommand_EGameCommandType_EGameCommandType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EGameCommandType_descriptor() {
    return ReqCommand_EGameCommandType_descriptor();
  }
  static inline const ::std::string& EGameCommandType_Name(EGameCommandType value) {
    return ReqCommand_EGameCommandType_Name(value);
  }
  static inline bool EGameCommandType_Parse(const ::std::string& name,
      EGameCommandType* value) {
    return ReqCommand_EGameCommandType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AFMsg.Ident control_id = 1;
  bool has_control_id() const;
  void clear_control_id();
  static const int kControlIdFieldNumber = 1;
  const ::AFMsg::Ident& control_id() const;
  ::AFMsg::Ident* release_control_id();
  ::AFMsg::Ident* mutable_control_id();
  void set_allocated_control_id(::AFMsg::Ident* control_id);

  // .AFMsg.ReqCommand.EGameCommandType command_id = 2;
  void clear_command_id();
  static const int kCommandIdFieldNumber = 2;
  ::AFMsg::ReqCommand_EGameCommandType command_id() const;
  void set_command_id(::AFMsg::ReqCommand_EGameCommandType value);

  // @@protoc_insertion_point(class_scope:AFMsg.ReqCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AFMsg::Ident* control_id_;
  int command_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_AFMsgBase_2eproto::TableStruct;
  friend void ::protobuf_AFMsgBase_2eproto::InitDefaultsReqCommandImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ident

// int64 high = 1;
inline void Ident::clear_high() {
  high_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Ident::high() const {
  // @@protoc_insertion_point(field_get:AFMsg.Ident.high)
  return high_;
}
inline void Ident::set_high(::google::protobuf::int64 value) {
  
  high_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Ident.high)
}

// int64 low = 2;
inline void Ident::clear_low() {
  low_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Ident::low() const {
  // @@protoc_insertion_point(field_get:AFMsg.Ident.low)
  return low_;
}
inline void Ident::set_low(::google::protobuf::int64 value) {
  
  low_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Ident.low)
}

// -------------------------------------------------------------------

// Point3D

// float x = 1;
inline void Point3D::clear_x() {
  x_ = 0;
}
inline float Point3D::x() const {
  // @@protoc_insertion_point(field_get:AFMsg.Point3D.x)
  return x_;
}
inline void Point3D::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Point3D.x)
}

// float y = 2;
inline void Point3D::clear_y() {
  y_ = 0;
}
inline float Point3D::y() const {
  // @@protoc_insertion_point(field_get:AFMsg.Point3D.y)
  return y_;
}
inline void Point3D::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Point3D.y)
}

// float z = 3;
inline void Point3D::clear_z() {
  z_ = 0;
}
inline float Point3D::z() const {
  // @@protoc_insertion_point(field_get:AFMsg.Point3D.z)
  return z_;
}
inline void Point3D::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Point3D.z)
}

// -------------------------------------------------------------------

// VariantData

// bool bool_value = 1;
inline bool VariantData::has_bool_value() const {
  return AFData_case() == kBoolValue;
}
inline void VariantData::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
inline void VariantData::clear_bool_value() {
  if (has_bool_value()) {
    AFData_.bool_value_ = false;
    clear_has_AFData();
  }
}
inline bool VariantData::bool_value() const {
  // @@protoc_insertion_point(field_get:AFMsg.VariantData.bool_value)
  if (has_bool_value()) {
    return AFData_.bool_value_;
  }
  return false;
}
inline void VariantData::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_AFData();
    set_has_bool_value();
  }
  AFData_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.VariantData.bool_value)
}

// int32 int_value = 2;
inline bool VariantData::has_int_value() const {
  return AFData_case() == kIntValue;
}
inline void VariantData::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
inline void VariantData::clear_int_value() {
  if (has_int_value()) {
    AFData_.int_value_ = 0;
    clear_has_AFData();
  }
}
inline ::google::protobuf::int32 VariantData::int_value() const {
  // @@protoc_insertion_point(field_get:AFMsg.VariantData.int_value)
  if (has_int_value()) {
    return AFData_.int_value_;
  }
  return 0;
}
inline void VariantData::set_int_value(::google::protobuf::int32 value) {
  if (!has_int_value()) {
    clear_AFData();
    set_has_int_value();
  }
  AFData_.int_value_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.VariantData.int_value)
}

// int64 int64_value = 3;
inline bool VariantData::has_int64_value() const {
  return AFData_case() == kInt64Value;
}
inline void VariantData::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
inline void VariantData::clear_int64_value() {
  if (has_int64_value()) {
    AFData_.int64_value_ = GOOGLE_LONGLONG(0);
    clear_has_AFData();
  }
}
inline ::google::protobuf::int64 VariantData::int64_value() const {
  // @@protoc_insertion_point(field_get:AFMsg.VariantData.int64_value)
  if (has_int64_value()) {
    return AFData_.int64_value_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void VariantData::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_AFData();
    set_has_int64_value();
  }
  AFData_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.VariantData.int64_value)
}

// float float_value = 4;
inline bool VariantData::has_float_value() const {
  return AFData_case() == kFloatValue;
}
inline void VariantData::set_has_float_value() {
  _oneof_case_[0] = kFloatValue;
}
inline void VariantData::clear_float_value() {
  if (has_float_value()) {
    AFData_.float_value_ = 0;
    clear_has_AFData();
  }
}
inline float VariantData::float_value() const {
  // @@protoc_insertion_point(field_get:AFMsg.VariantData.float_value)
  if (has_float_value()) {
    return AFData_.float_value_;
  }
  return 0;
}
inline void VariantData::set_float_value(float value) {
  if (!has_float_value()) {
    clear_AFData();
    set_has_float_value();
  }
  AFData_.float_value_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.VariantData.float_value)
}

// double double_value = 5;
inline bool VariantData::has_double_value() const {
  return AFData_case() == kDoubleValue;
}
inline void VariantData::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
inline void VariantData::clear_double_value() {
  if (has_double_value()) {
    AFData_.double_value_ = 0;
    clear_has_AFData();
  }
}
inline double VariantData::double_value() const {
  // @@protoc_insertion_point(field_get:AFMsg.VariantData.double_value)
  if (has_double_value()) {
    return AFData_.double_value_;
  }
  return 0;
}
inline void VariantData::set_double_value(double value) {
  if (!has_double_value()) {
    clear_AFData();
    set_has_double_value();
  }
  AFData_.double_value_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.VariantData.double_value)
}

// string str_value = 6;
inline bool VariantData::has_str_value() const {
  return AFData_case() == kStrValue;
}
inline void VariantData::set_has_str_value() {
  _oneof_case_[0] = kStrValue;
}
inline void VariantData::clear_str_value() {
  if (has_str_value()) {
    AFData_.str_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_AFData();
  }
}
inline const ::std::string& VariantData::str_value() const {
  // @@protoc_insertion_point(field_get:AFMsg.VariantData.str_value)
  if (has_str_value()) {
    return AFData_.str_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void VariantData::set_str_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:AFMsg.VariantData.str_value)
  if (!has_str_value()) {
    clear_AFData();
    set_has_str_value();
    AFData_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  AFData_.str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.VariantData.str_value)
}
#if LANG_CXX11
inline void VariantData::set_str_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:AFMsg.VariantData.str_value)
  if (!has_str_value()) {
    clear_AFData();
    set_has_str_value();
    AFData_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  AFData_.str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.VariantData.str_value)
}
#endif
inline void VariantData::set_str_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str_value()) {
    clear_AFData();
    set_has_str_value();
    AFData_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  AFData_.str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.VariantData.str_value)
}
inline void VariantData::set_str_value(const char* value, size_t size) {
  if (!has_str_value()) {
    clear_AFData();
    set_has_str_value();
    AFData_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  AFData_.str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.VariantData.str_value)
}
inline ::std::string* VariantData::mutable_str_value() {
  if (!has_str_value()) {
    clear_AFData();
    set_has_str_value();
    AFData_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.VariantData.str_value)
  return AFData_.str_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariantData::release_str_value() {
  // @@protoc_insertion_point(field_release:AFMsg.VariantData.str_value)
  if (has_str_value()) {
    clear_has_AFData();
    return AFData_.str_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void VariantData::set_allocated_str_value(::std::string* str_value) {
  if (!has_str_value()) {
    AFData_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_AFData();
  if (str_value != NULL) {
    set_has_str_value();
    AFData_.str_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_value);
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.VariantData.str_value)
}

// .AFMsg.Ident guid_value = 7;
inline bool VariantData::has_guid_value() const {
  return AFData_case() == kGuidValue;
}
inline void VariantData::set_has_guid_value() {
  _oneof_case_[0] = kGuidValue;
}
inline void VariantData::clear_guid_value() {
  if (has_guid_value()) {
    delete AFData_.guid_value_;
    clear_has_AFData();
  }
}
inline ::AFMsg::Ident* VariantData::release_guid_value() {
  // @@protoc_insertion_point(field_release:AFMsg.VariantData.guid_value)
  if (has_guid_value()) {
    clear_has_AFData();
      ::AFMsg::Ident* temp = AFData_.guid_value_;
    AFData_.guid_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::AFMsg::Ident& VariantData::guid_value() const {
  // @@protoc_insertion_point(field_get:AFMsg.VariantData.guid_value)
  return has_guid_value()
      ? *AFData_.guid_value_
      : *reinterpret_cast< ::AFMsg::Ident*>(&::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* VariantData::mutable_guid_value() {
  if (!has_guid_value()) {
    clear_AFData();
    set_has_guid_value();
    AFData_.guid_value_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.VariantData.guid_value)
  return AFData_.guid_value_;
}

inline bool VariantData::has_AFData() const {
  return AFData_case() != AFDATA_NOT_SET;
}
inline void VariantData::clear_has_AFData() {
  _oneof_case_[0] = AFDATA_NOT_SET;
}
inline VariantData::AFDataCase VariantData::AFData_case() const {
  return VariantData::AFDataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PropertyPBData

// string property_name = 1;
inline void PropertyPBData::clear_property_name() {
  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PropertyPBData::property_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.property_name)
  return property_name_.GetNoArena();
}
inline void PropertyPBData::set_property_name(const ::std::string& value) {
  
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.property_name)
}
#if LANG_CXX11
inline void PropertyPBData::set_property_name(::std::string&& value) {
  
  property_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.PropertyPBData.property_name)
}
#endif
inline void PropertyPBData::set_property_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.PropertyPBData.property_name)
}
inline void PropertyPBData::set_property_name(const char* value, size_t size) {
  
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.PropertyPBData.property_name)
}
inline ::std::string* PropertyPBData::mutable_property_name() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.PropertyPBData.property_name)
  return property_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PropertyPBData::release_property_name() {
  // @@protoc_insertion_point(field_release:AFMsg.PropertyPBData.property_name)
  
  return property_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PropertyPBData::set_allocated_property_name(::std::string* property_name) {
  if (property_name != NULL) {
    
  } else {
    
  }
  property_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PropertyPBData.property_name)
}

// int32 ndataType = 2;
inline void PropertyPBData::clear_ndatatype() {
  ndatatype_ = 0;
}
inline ::google::protobuf::int32 PropertyPBData::ndatatype() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.ndataType)
  return ndatatype_;
}
inline void PropertyPBData::set_ndatatype(::google::protobuf::int32 value) {
  
  ndatatype_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.ndataType)
}

// .AFMsg.VariantData variant_data = 3;
inline bool PropertyPBData::has_variant_data() const {
  return this != internal_default_instance() && variant_data_ != NULL;
}
inline void PropertyPBData::clear_variant_data() {
  if (GetArenaNoVirtual() == NULL && variant_data_ != NULL) {
    delete variant_data_;
  }
  variant_data_ = NULL;
}
inline const ::AFMsg::VariantData& PropertyPBData::variant_data() const {
  const ::AFMsg::VariantData* p = variant_data_;
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.variant_data)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::VariantData*>(
      &::AFMsg::_VariantData_default_instance_);
}
inline ::AFMsg::VariantData* PropertyPBData::release_variant_data() {
  // @@protoc_insertion_point(field_release:AFMsg.PropertyPBData.variant_data)
  
  ::AFMsg::VariantData* temp = variant_data_;
  variant_data_ = NULL;
  return temp;
}
inline ::AFMsg::VariantData* PropertyPBData::mutable_variant_data() {
  
  if (variant_data_ == NULL) {
    variant_data_ = ::google::protobuf::Arena::Create< ::AFMsg::VariantData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.PropertyPBData.variant_data)
  return variant_data_;
}
inline void PropertyPBData::set_allocated_variant_data(::AFMsg::VariantData* variant_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete variant_data_;
  }
  if (variant_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      variant_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, variant_data, submessage_arena);
    }
    
  } else {
    
  }
  variant_data_ = variant_data;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PropertyPBData.variant_data)
}

// -------------------------------------------------------------------

// RecordPBData

// int32 row = 1;
inline void RecordPBData::clear_row() {
  row_ = 0;
}
inline ::google::protobuf::int32 RecordPBData::row() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.row)
  return row_;
}
inline void RecordPBData::set_row(::google::protobuf::int32 value) {
  
  row_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.row)
}

// int32 col = 2;
inline void RecordPBData::clear_col() {
  col_ = 0;
}
inline ::google::protobuf::int32 RecordPBData::col() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.col)
  return col_;
}
inline void RecordPBData::set_col(::google::protobuf::int32 value) {
  
  col_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.col)
}

// int32 ndataType = 3;
inline void RecordPBData::clear_ndatatype() {
  ndatatype_ = 0;
}
inline ::google::protobuf::int32 RecordPBData::ndatatype() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.ndataType)
  return ndatatype_;
}
inline void RecordPBData::set_ndatatype(::google::protobuf::int32 value) {
  
  ndatatype_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.ndataType)
}

// .AFMsg.VariantData variant_data = 4;
inline bool RecordPBData::has_variant_data() const {
  return this != internal_default_instance() && variant_data_ != NULL;
}
inline void RecordPBData::clear_variant_data() {
  if (GetArenaNoVirtual() == NULL && variant_data_ != NULL) {
    delete variant_data_;
  }
  variant_data_ = NULL;
}
inline const ::AFMsg::VariantData& RecordPBData::variant_data() const {
  const ::AFMsg::VariantData* p = variant_data_;
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.variant_data)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::VariantData*>(
      &::AFMsg::_VariantData_default_instance_);
}
inline ::AFMsg::VariantData* RecordPBData::release_variant_data() {
  // @@protoc_insertion_point(field_release:AFMsg.RecordPBData.variant_data)
  
  ::AFMsg::VariantData* temp = variant_data_;
  variant_data_ = NULL;
  return temp;
}
inline ::AFMsg::VariantData* RecordPBData::mutable_variant_data() {
  
  if (variant_data_ == NULL) {
    variant_data_ = ::google::protobuf::Arena::Create< ::AFMsg::VariantData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.RecordPBData.variant_data)
  return variant_data_;
}
inline void RecordPBData::set_allocated_variant_data(::AFMsg::VariantData* variant_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete variant_data_;
  }
  if (variant_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      variant_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, variant_data, submessage_arena);
    }
    
  } else {
    
  }
  variant_data_ = variant_data;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.RecordPBData.variant_data)
}

// -------------------------------------------------------------------

// PBData

// int32 ndataType = 1;
inline void PBData::clear_ndatatype() {
  ndatatype_ = 0;
}
inline ::google::protobuf::int32 PBData::ndatatype() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.ndataType)
  return ndatatype_;
}
inline void PBData::set_ndatatype(::google::protobuf::int32 value) {
  
  ndatatype_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PBData.ndataType)
}

// .AFMsg.VariantData variant_data = 2;
inline bool PBData::has_variant_data() const {
  return this != internal_default_instance() && variant_data_ != NULL;
}
inline void PBData::clear_variant_data() {
  if (GetArenaNoVirtual() == NULL && variant_data_ != NULL) {
    delete variant_data_;
  }
  variant_data_ = NULL;
}
inline const ::AFMsg::VariantData& PBData::variant_data() const {
  const ::AFMsg::VariantData* p = variant_data_;
  // @@protoc_insertion_point(field_get:AFMsg.PBData.variant_data)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::VariantData*>(
      &::AFMsg::_VariantData_default_instance_);
}
inline ::AFMsg::VariantData* PBData::release_variant_data() {
  // @@protoc_insertion_point(field_release:AFMsg.PBData.variant_data)
  
  ::AFMsg::VariantData* temp = variant_data_;
  variant_data_ = NULL;
  return temp;
}
inline ::AFMsg::VariantData* PBData::mutable_variant_data() {
  
  if (variant_data_ == NULL) {
    variant_data_ = ::google::protobuf::Arena::Create< ::AFMsg::VariantData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.PBData.variant_data)
  return variant_data_;
}
inline void PBData::set_allocated_variant_data(::AFMsg::VariantData* variant_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete variant_data_;
  }
  if (variant_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      variant_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, variant_data, submessage_arena);
    }
    
  } else {
    
  }
  variant_data_ = variant_data;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PBData.variant_data)
}

// -------------------------------------------------------------------

// DataListPBData

// repeated .AFMsg.PBData data_list = 1;
inline int DataListPBData::data_list_size() const {
  return data_list_.size();
}
inline void DataListPBData::clear_data_list() {
  data_list_.Clear();
}
inline ::AFMsg::PBData* DataListPBData::mutable_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.DataListPBData.data_list)
  return data_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::PBData >*
DataListPBData::mutable_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.DataListPBData.data_list)
  return &data_list_;
}
inline const ::AFMsg::PBData& DataListPBData::data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.DataListPBData.data_list)
  return data_list_.Get(index);
}
inline ::AFMsg::PBData* DataListPBData::add_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.DataListPBData.data_list)
  return data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::PBData >&
DataListPBData::data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.DataListPBData.data_list)
  return data_list_;
}

// -------------------------------------------------------------------

// RecordAddRowStruct

// int32 row = 1;
inline void RecordAddRowStruct::clear_row() {
  row_ = 0;
}
inline ::google::protobuf::int32 RecordAddRowStruct::row() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordAddRowStruct.row)
  return row_;
}
inline void RecordAddRowStruct::set_row(::google::protobuf::int32 value) {
  
  row_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordAddRowStruct.row)
}

// repeated .AFMsg.RecordPBData record_data_list = 2;
inline int RecordAddRowStruct::record_data_list_size() const {
  return record_data_list_.size();
}
inline void RecordAddRowStruct::clear_record_data_list() {
  record_data_list_.Clear();
}
inline ::AFMsg::RecordPBData* RecordAddRowStruct::mutable_record_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.RecordAddRowStruct.record_data_list)
  return record_data_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
RecordAddRowStruct::mutable_record_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.RecordAddRowStruct.record_data_list)
  return &record_data_list_;
}
inline const ::AFMsg::RecordPBData& RecordAddRowStruct::record_data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordAddRowStruct.record_data_list)
  return record_data_list_.Get(index);
}
inline ::AFMsg::RecordPBData* RecordAddRowStruct::add_record_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.RecordAddRowStruct.record_data_list)
  return record_data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
RecordAddRowStruct::record_data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.RecordAddRowStruct.record_data_list)
  return record_data_list_;
}

// -------------------------------------------------------------------

// ObjectRecordBase

// string record_name = 1;
inline void ObjectRecordBase::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectRecordBase::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordBase.record_name)
  return record_name_.GetNoArena();
}
inline void ObjectRecordBase::set_record_name(const ::std::string& value) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordBase.record_name)
}
#if LANG_CXX11
inline void ObjectRecordBase::set_record_name(::std::string&& value) {
  
  record_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.ObjectRecordBase.record_name)
}
#endif
inline void ObjectRecordBase::set_record_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordBase.record_name)
}
inline void ObjectRecordBase::set_record_name(const char* value, size_t size) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordBase.record_name)
}
inline ::std::string* ObjectRecordBase::mutable_record_name() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordBase.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectRecordBase::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordBase.record_name)
  
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectRecordBase::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    
  } else {
    
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordBase.record_name)
}

// repeated .AFMsg.RecordAddRowStruct row_struct = 2;
inline int ObjectRecordBase::row_struct_size() const {
  return row_struct_.size();
}
inline void ObjectRecordBase::clear_row_struct() {
  row_struct_.Clear();
}
inline ::AFMsg::RecordAddRowStruct* ObjectRecordBase::mutable_row_struct(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordBase.row_struct)
  return row_struct_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >*
ObjectRecordBase::mutable_row_struct() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordBase.row_struct)
  return &row_struct_;
}
inline const ::AFMsg::RecordAddRowStruct& ObjectRecordBase::row_struct(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordBase.row_struct)
  return row_struct_.Get(index);
}
inline ::AFMsg::RecordAddRowStruct* ObjectRecordBase::add_row_struct() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordBase.row_struct)
  return row_struct_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >&
ObjectRecordBase::row_struct() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordBase.row_struct)
  return row_struct_;
}

// -------------------------------------------------------------------

// ObjectPropertyList

// .AFMsg.Ident player_id = 1;
inline bool ObjectPropertyList::has_player_id() const {
  return this != internal_default_instance() && player_id_ != NULL;
}
inline void ObjectPropertyList::clear_player_id() {
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
}
inline const ::AFMsg::Ident& ObjectPropertyList::player_id() const {
  const ::AFMsg::Ident* p = player_id_;
  // @@protoc_insertion_point(field_get:AFMsg.ObjectPropertyList.player_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* ObjectPropertyList::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectPropertyList.player_id)
  
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* ObjectPropertyList::mutable_player_id() {
  
  if (player_id_ == NULL) {
    player_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectPropertyList.player_id)
  return player_id_;
}
inline void ObjectPropertyList::set_allocated_player_id(::AFMsg::Ident* player_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_id_;
  }
  if (player_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_id, submessage_arena);
    }
    
  } else {
    
  }
  player_id_ = player_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectPropertyList.player_id)
}

// repeated .AFMsg.PropertyPBData property_data_list = 2;
inline int ObjectPropertyList::property_data_list_size() const {
  return property_data_list_.size();
}
inline void ObjectPropertyList::clear_property_data_list() {
  property_data_list_.Clear();
}
inline ::AFMsg::PropertyPBData* ObjectPropertyList::mutable_property_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectPropertyList.property_data_list)
  return property_data_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
ObjectPropertyList::mutable_property_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectPropertyList.property_data_list)
  return &property_data_list_;
}
inline const ::AFMsg::PropertyPBData& ObjectPropertyList::property_data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectPropertyList.property_data_list)
  return property_data_list_.Get(index);
}
inline ::AFMsg::PropertyPBData* ObjectPropertyList::add_property_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectPropertyList.property_data_list)
  return property_data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
ObjectPropertyList::property_data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectPropertyList.property_data_list)
  return property_data_list_;
}

// -------------------------------------------------------------------

// MultiObjectPropertyList

// repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
inline int MultiObjectPropertyList::multi_player_property_size() const {
  return multi_player_property_.size();
}
inline void MultiObjectPropertyList::clear_multi_player_property() {
  multi_player_property_.Clear();
}
inline ::AFMsg::ObjectPropertyList* MultiObjectPropertyList::mutable_multi_player_property(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.MultiObjectPropertyList.multi_player_property)
  return multi_player_property_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectPropertyList >*
MultiObjectPropertyList::mutable_multi_player_property() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.MultiObjectPropertyList.multi_player_property)
  return &multi_player_property_;
}
inline const ::AFMsg::ObjectPropertyList& MultiObjectPropertyList::multi_player_property(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.MultiObjectPropertyList.multi_player_property)
  return multi_player_property_.Get(index);
}
inline ::AFMsg::ObjectPropertyList* MultiObjectPropertyList::add_multi_player_property() {
  // @@protoc_insertion_point(field_add:AFMsg.MultiObjectPropertyList.multi_player_property)
  return multi_player_property_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectPropertyList >&
MultiObjectPropertyList::multi_player_property() const {
  // @@protoc_insertion_point(field_list:AFMsg.MultiObjectPropertyList.multi_player_property)
  return multi_player_property_;
}

// -------------------------------------------------------------------

// ObjectRecordList

// .AFMsg.Ident player_id = 1;
inline bool ObjectRecordList::has_player_id() const {
  return this != internal_default_instance() && player_id_ != NULL;
}
inline void ObjectRecordList::clear_player_id() {
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
}
inline const ::AFMsg::Ident& ObjectRecordList::player_id() const {
  const ::AFMsg::Ident* p = player_id_;
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordList.player_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* ObjectRecordList::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordList.player_id)
  
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* ObjectRecordList::mutable_player_id() {
  
  if (player_id_ == NULL) {
    player_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordList.player_id)
  return player_id_;
}
inline void ObjectRecordList::set_allocated_player_id(::AFMsg::Ident* player_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_id_;
  }
  if (player_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_id, submessage_arena);
    }
    
  } else {
    
  }
  player_id_ = player_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordList.player_id)
}

// repeated .AFMsg.ObjectRecordBase record_list = 2;
inline int ObjectRecordList::record_list_size() const {
  return record_list_.size();
}
inline void ObjectRecordList::clear_record_list() {
  record_list_.Clear();
}
inline ::AFMsg::ObjectRecordBase* ObjectRecordList::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordList.record_list)
  return record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordBase >*
ObjectRecordList::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordList.record_list)
  return &record_list_;
}
inline const ::AFMsg::ObjectRecordBase& ObjectRecordList::record_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordList.record_list)
  return record_list_.Get(index);
}
inline ::AFMsg::ObjectRecordBase* ObjectRecordList::add_record_list() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordList.record_list)
  return record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordBase >&
ObjectRecordList::record_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordList.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// MultiObjectRecordList

// repeated .AFMsg.ObjectRecordList multi_player_record = 1;
inline int MultiObjectRecordList::multi_player_record_size() const {
  return multi_player_record_.size();
}
inline void MultiObjectRecordList::clear_multi_player_record() {
  multi_player_record_.Clear();
}
inline ::AFMsg::ObjectRecordList* MultiObjectRecordList::mutable_multi_player_record(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.MultiObjectRecordList.multi_player_record)
  return multi_player_record_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordList >*
MultiObjectRecordList::mutable_multi_player_record() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.MultiObjectRecordList.multi_player_record)
  return &multi_player_record_;
}
inline const ::AFMsg::ObjectRecordList& MultiObjectRecordList::multi_player_record(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.MultiObjectRecordList.multi_player_record)
  return multi_player_record_.Get(index);
}
inline ::AFMsg::ObjectRecordList* MultiObjectRecordList::add_multi_player_record() {
  // @@protoc_insertion_point(field_add:AFMsg.MultiObjectRecordList.multi_player_record)
  return multi_player_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordList >&
MultiObjectRecordList::multi_player_record() const {
  // @@protoc_insertion_point(field_list:AFMsg.MultiObjectRecordList.multi_player_record)
  return multi_player_record_;
}

// -------------------------------------------------------------------

// ObjectPropertyPBData

// .AFMsg.Ident player_id = 1;
inline bool ObjectPropertyPBData::has_player_id() const {
  return this != internal_default_instance() && player_id_ != NULL;
}
inline void ObjectPropertyPBData::clear_player_id() {
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
}
inline const ::AFMsg::Ident& ObjectPropertyPBData::player_id() const {
  const ::AFMsg::Ident* p = player_id_;
  // @@protoc_insertion_point(field_get:AFMsg.ObjectPropertyPBData.player_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* ObjectPropertyPBData::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectPropertyPBData.player_id)
  
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* ObjectPropertyPBData::mutable_player_id() {
  
  if (player_id_ == NULL) {
    player_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectPropertyPBData.player_id)
  return player_id_;
}
inline void ObjectPropertyPBData::set_allocated_player_id(::AFMsg::Ident* player_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_id_;
  }
  if (player_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_id, submessage_arena);
    }
    
  } else {
    
  }
  player_id_ = player_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectPropertyPBData.player_id)
}

// repeated .AFMsg.PropertyPBData property_list = 2;
inline int ObjectPropertyPBData::property_list_size() const {
  return property_list_.size();
}
inline void ObjectPropertyPBData::clear_property_list() {
  property_list_.Clear();
}
inline ::AFMsg::PropertyPBData* ObjectPropertyPBData::mutable_property_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectPropertyPBData.property_list)
  return property_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
ObjectPropertyPBData::mutable_property_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectPropertyPBData.property_list)
  return &property_list_;
}
inline const ::AFMsg::PropertyPBData& ObjectPropertyPBData::property_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectPropertyPBData.property_list)
  return property_list_.Get(index);
}
inline ::AFMsg::PropertyPBData* ObjectPropertyPBData::add_property_list() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectPropertyPBData.property_list)
  return property_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
ObjectPropertyPBData::property_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectPropertyPBData.property_list)
  return property_list_;
}

// -------------------------------------------------------------------

// ObjectRecordPBData

// .AFMsg.Ident player_id = 1;
inline bool ObjectRecordPBData::has_player_id() const {
  return this != internal_default_instance() && player_id_ != NULL;
}
inline void ObjectRecordPBData::clear_player_id() {
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
}
inline const ::AFMsg::Ident& ObjectRecordPBData::player_id() const {
  const ::AFMsg::Ident* p = player_id_;
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordPBData.player_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* ObjectRecordPBData::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordPBData.player_id)
  
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* ObjectRecordPBData::mutable_player_id() {
  
  if (player_id_ == NULL) {
    player_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordPBData.player_id)
  return player_id_;
}
inline void ObjectRecordPBData::set_allocated_player_id(::AFMsg::Ident* player_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_id_;
  }
  if (player_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_id, submessage_arena);
    }
    
  } else {
    
  }
  player_id_ = player_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordPBData.player_id)
}

// string record_name = 2;
inline void ObjectRecordPBData::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectRecordPBData::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordPBData.record_name)
  return record_name_.GetNoArena();
}
inline void ObjectRecordPBData::set_record_name(const ::std::string& value) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordPBData.record_name)
}
#if LANG_CXX11
inline void ObjectRecordPBData::set_record_name(::std::string&& value) {
  
  record_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.ObjectRecordPBData.record_name)
}
#endif
inline void ObjectRecordPBData::set_record_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordPBData.record_name)
}
inline void ObjectRecordPBData::set_record_name(const char* value, size_t size) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordPBData.record_name)
}
inline ::std::string* ObjectRecordPBData::mutable_record_name() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordPBData.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectRecordPBData::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordPBData.record_name)
  
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectRecordPBData::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    
  } else {
    
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordPBData.record_name)
}

// repeated .AFMsg.RecordPBData record_list = 3;
inline int ObjectRecordPBData::record_list_size() const {
  return record_list_.size();
}
inline void ObjectRecordPBData::clear_record_list() {
  record_list_.Clear();
}
inline ::AFMsg::RecordPBData* ObjectRecordPBData::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordPBData.record_list)
  return record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
ObjectRecordPBData::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordPBData.record_list)
  return &record_list_;
}
inline const ::AFMsg::RecordPBData& ObjectRecordPBData::record_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordPBData.record_list)
  return record_list_.Get(index);
}
inline ::AFMsg::RecordPBData* ObjectRecordPBData::add_record_list() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordPBData.record_list)
  return record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
ObjectRecordPBData::record_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordPBData.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// ObjectRecordSwap

// .AFMsg.Ident player_id = 1;
inline bool ObjectRecordSwap::has_player_id() const {
  return this != internal_default_instance() && player_id_ != NULL;
}
inline void ObjectRecordSwap::clear_player_id() {
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
}
inline const ::AFMsg::Ident& ObjectRecordSwap::player_id() const {
  const ::AFMsg::Ident* p = player_id_;
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.player_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* ObjectRecordSwap::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordSwap.player_id)
  
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* ObjectRecordSwap::mutable_player_id() {
  
  if (player_id_ == NULL) {
    player_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordSwap.player_id)
  return player_id_;
}
inline void ObjectRecordSwap::set_allocated_player_id(::AFMsg::Ident* player_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_id_;
  }
  if (player_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_id, submessage_arena);
    }
    
  } else {
    
  }
  player_id_ = player_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordSwap.player_id)
}

// string origin_record_name = 2;
inline void ObjectRecordSwap::clear_origin_record_name() {
  origin_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectRecordSwap::origin_record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.origin_record_name)
  return origin_record_name_.GetNoArena();
}
inline void ObjectRecordSwap::set_origin_record_name(const ::std::string& value) {
  
  origin_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordSwap.origin_record_name)
}
#if LANG_CXX11
inline void ObjectRecordSwap::set_origin_record_name(::std::string&& value) {
  
  origin_record_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.ObjectRecordSwap.origin_record_name)
}
#endif
inline void ObjectRecordSwap::set_origin_record_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  origin_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordSwap.origin_record_name)
}
inline void ObjectRecordSwap::set_origin_record_name(const char* value, size_t size) {
  
  origin_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordSwap.origin_record_name)
}
inline ::std::string* ObjectRecordSwap::mutable_origin_record_name() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordSwap.origin_record_name)
  return origin_record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectRecordSwap::release_origin_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordSwap.origin_record_name)
  
  return origin_record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectRecordSwap::set_allocated_origin_record_name(::std::string* origin_record_name) {
  if (origin_record_name != NULL) {
    
  } else {
    
  }
  origin_record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin_record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordSwap.origin_record_name)
}

// string target_record_name = 3;
inline void ObjectRecordSwap::clear_target_record_name() {
  target_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectRecordSwap::target_record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.target_record_name)
  return target_record_name_.GetNoArena();
}
inline void ObjectRecordSwap::set_target_record_name(const ::std::string& value) {
  
  target_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordSwap.target_record_name)
}
#if LANG_CXX11
inline void ObjectRecordSwap::set_target_record_name(::std::string&& value) {
  
  target_record_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.ObjectRecordSwap.target_record_name)
}
#endif
inline void ObjectRecordSwap::set_target_record_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordSwap.target_record_name)
}
inline void ObjectRecordSwap::set_target_record_name(const char* value, size_t size) {
  
  target_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordSwap.target_record_name)
}
inline ::std::string* ObjectRecordSwap::mutable_target_record_name() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordSwap.target_record_name)
  return target_record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectRecordSwap::release_target_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordSwap.target_record_name)
  
  return target_record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectRecordSwap::set_allocated_target_record_name(::std::string* target_record_name) {
  if (target_record_name != NULL) {
    
  } else {
    
  }
  target_record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordSwap.target_record_name)
}

// int32 row_origin = 4;
inline void ObjectRecordSwap::clear_row_origin() {
  row_origin_ = 0;
}
inline ::google::protobuf::int32 ObjectRecordSwap::row_origin() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.row_origin)
  return row_origin_;
}
inline void ObjectRecordSwap::set_row_origin(::google::protobuf::int32 value) {
  
  row_origin_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordSwap.row_origin)
}

// int32 row_target = 5;
inline void ObjectRecordSwap::clear_row_target() {
  row_target_ = 0;
}
inline ::google::protobuf::int32 ObjectRecordSwap::row_target() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.row_target)
  return row_target_;
}
inline void ObjectRecordSwap::set_row_target(::google::protobuf::int32 value) {
  
  row_target_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordSwap.row_target)
}

// -------------------------------------------------------------------

// ObjectRecordAddRow

// .AFMsg.Ident player_id = 1;
inline bool ObjectRecordAddRow::has_player_id() const {
  return this != internal_default_instance() && player_id_ != NULL;
}
inline void ObjectRecordAddRow::clear_player_id() {
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
}
inline const ::AFMsg::Ident& ObjectRecordAddRow::player_id() const {
  const ::AFMsg::Ident* p = player_id_;
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordAddRow.player_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* ObjectRecordAddRow::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordAddRow.player_id)
  
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* ObjectRecordAddRow::mutable_player_id() {
  
  if (player_id_ == NULL) {
    player_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordAddRow.player_id)
  return player_id_;
}
inline void ObjectRecordAddRow::set_allocated_player_id(::AFMsg::Ident* player_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_id_;
  }
  if (player_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_id, submessage_arena);
    }
    
  } else {
    
  }
  player_id_ = player_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordAddRow.player_id)
}

// string record_name = 2;
inline void ObjectRecordAddRow::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectRecordAddRow::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordAddRow.record_name)
  return record_name_.GetNoArena();
}
inline void ObjectRecordAddRow::set_record_name(const ::std::string& value) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordAddRow.record_name)
}
#if LANG_CXX11
inline void ObjectRecordAddRow::set_record_name(::std::string&& value) {
  
  record_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.ObjectRecordAddRow.record_name)
}
#endif
inline void ObjectRecordAddRow::set_record_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordAddRow.record_name)
}
inline void ObjectRecordAddRow::set_record_name(const char* value, size_t size) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordAddRow.record_name)
}
inline ::std::string* ObjectRecordAddRow::mutable_record_name() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordAddRow.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectRecordAddRow::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordAddRow.record_name)
  
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectRecordAddRow::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    
  } else {
    
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordAddRow.record_name)
}

// repeated .AFMsg.RecordAddRowStruct row_data = 3;
inline int ObjectRecordAddRow::row_data_size() const {
  return row_data_.size();
}
inline void ObjectRecordAddRow::clear_row_data() {
  row_data_.Clear();
}
inline ::AFMsg::RecordAddRowStruct* ObjectRecordAddRow::mutable_row_data(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordAddRow.row_data)
  return row_data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >*
ObjectRecordAddRow::mutable_row_data() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordAddRow.row_data)
  return &row_data_;
}
inline const ::AFMsg::RecordAddRowStruct& ObjectRecordAddRow::row_data(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordAddRow.row_data)
  return row_data_.Get(index);
}
inline ::AFMsg::RecordAddRowStruct* ObjectRecordAddRow::add_row_data() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordAddRow.row_data)
  return row_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >&
ObjectRecordAddRow::row_data() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordAddRow.row_data)
  return row_data_;
}

// -------------------------------------------------------------------

// ObjectRecordRemove

// .AFMsg.Ident player_id = 1;
inline bool ObjectRecordRemove::has_player_id() const {
  return this != internal_default_instance() && player_id_ != NULL;
}
inline void ObjectRecordRemove::clear_player_id() {
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
}
inline const ::AFMsg::Ident& ObjectRecordRemove::player_id() const {
  const ::AFMsg::Ident* p = player_id_;
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordRemove.player_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* ObjectRecordRemove::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordRemove.player_id)
  
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* ObjectRecordRemove::mutable_player_id() {
  
  if (player_id_ == NULL) {
    player_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordRemove.player_id)
  return player_id_;
}
inline void ObjectRecordRemove::set_allocated_player_id(::AFMsg::Ident* player_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_id_;
  }
  if (player_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_id, submessage_arena);
    }
    
  } else {
    
  }
  player_id_ = player_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordRemove.player_id)
}

// string record_name = 2;
inline void ObjectRecordRemove::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjectRecordRemove::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordRemove.record_name)
  return record_name_.GetNoArena();
}
inline void ObjectRecordRemove::set_record_name(const ::std::string& value) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordRemove.record_name)
}
#if LANG_CXX11
inline void ObjectRecordRemove::set_record_name(::std::string&& value) {
  
  record_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.ObjectRecordRemove.record_name)
}
#endif
inline void ObjectRecordRemove::set_record_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordRemove.record_name)
}
inline void ObjectRecordRemove::set_record_name(const char* value, size_t size) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordRemove.record_name)
}
inline ::std::string* ObjectRecordRemove::mutable_record_name() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordRemove.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectRecordRemove::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordRemove.record_name)
  
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectRecordRemove::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    
  } else {
    
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordRemove.record_name)
}

// repeated int32 remove_row = 3;
inline int ObjectRecordRemove::remove_row_size() const {
  return remove_row_.size();
}
inline void ObjectRecordRemove::clear_remove_row() {
  remove_row_.Clear();
}
inline ::google::protobuf::int32 ObjectRecordRemove::remove_row(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordRemove.remove_row)
  return remove_row_.Get(index);
}
inline void ObjectRecordRemove::set_remove_row(int index, ::google::protobuf::int32 value) {
  remove_row_.Set(index, value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordRemove.remove_row)
}
inline void ObjectRecordRemove::add_remove_row(::google::protobuf::int32 value) {
  remove_row_.Add(value);
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordRemove.remove_row)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ObjectRecordRemove::remove_row() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordRemove.remove_row)
  return remove_row_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ObjectRecordRemove::mutable_remove_row() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordRemove.remove_row)
  return &remove_row_;
}

// -------------------------------------------------------------------

// PlayerPropertyBase

// repeated .AFMsg.PropertyPBData property_data_list = 1;
inline int PlayerPropertyBase::property_data_list_size() const {
  return property_data_list_.size();
}
inline void PlayerPropertyBase::clear_property_data_list() {
  property_data_list_.Clear();
}
inline ::AFMsg::PropertyPBData* PlayerPropertyBase::mutable_property_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.PlayerPropertyBase.property_data_list)
  return property_data_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
PlayerPropertyBase::mutable_property_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.PlayerPropertyBase.property_data_list)
  return &property_data_list_;
}
inline const ::AFMsg::PropertyPBData& PlayerPropertyBase::property_data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.PlayerPropertyBase.property_data_list)
  return property_data_list_.Get(index);
}
inline ::AFMsg::PropertyPBData* PlayerPropertyBase::add_property_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.PlayerPropertyBase.property_data_list)
  return property_data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
PlayerPropertyBase::property_data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.PlayerPropertyBase.property_data_list)
  return property_data_list_;
}

// -------------------------------------------------------------------

// PlayerRecordBase

// string record_name = 1;
inline void PlayerRecordBase::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerRecordBase::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.PlayerRecordBase.record_name)
  return record_name_.GetNoArena();
}
inline void PlayerRecordBase::set_record_name(const ::std::string& value) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.PlayerRecordBase.record_name)
}
#if LANG_CXX11
inline void PlayerRecordBase::set_record_name(::std::string&& value) {
  
  record_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.PlayerRecordBase.record_name)
}
#endif
inline void PlayerRecordBase::set_record_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.PlayerRecordBase.record_name)
}
inline void PlayerRecordBase::set_record_name(const char* value, size_t size) {
  
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.PlayerRecordBase.record_name)
}
inline ::std::string* PlayerRecordBase::mutable_record_name() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.PlayerRecordBase.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerRecordBase::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.PlayerRecordBase.record_name)
  
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerRecordBase::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    
  } else {
    
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PlayerRecordBase.record_name)
}

// repeated .AFMsg.RecordPBData record_data_list = 2;
inline int PlayerRecordBase::record_data_list_size() const {
  return record_data_list_.size();
}
inline void PlayerRecordBase::clear_record_data_list() {
  record_data_list_.Clear();
}
inline ::AFMsg::RecordPBData* PlayerRecordBase::mutable_record_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.PlayerRecordBase.record_data_list)
  return record_data_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
PlayerRecordBase::mutable_record_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.PlayerRecordBase.record_data_list)
  return &record_data_list_;
}
inline const ::AFMsg::RecordPBData& PlayerRecordBase::record_data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.PlayerRecordBase.record_data_list)
  return record_data_list_.Get(index);
}
inline ::AFMsg::RecordPBData* PlayerRecordBase::add_record_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.PlayerRecordBase.record_data_list)
  return record_data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
PlayerRecordBase::record_data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.PlayerRecordBase.record_data_list)
  return record_data_list_;
}

// -------------------------------------------------------------------

// PlayerRecordList

// repeated .AFMsg.PlayerRecordBase record_list = 1;
inline int PlayerRecordList::record_list_size() const {
  return record_list_.size();
}
inline void PlayerRecordList::clear_record_list() {
  record_list_.Clear();
}
inline ::AFMsg::PlayerRecordBase* PlayerRecordList::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.PlayerRecordList.record_list)
  return record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::PlayerRecordBase >*
PlayerRecordList::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.PlayerRecordList.record_list)
  return &record_list_;
}
inline const ::AFMsg::PlayerRecordBase& PlayerRecordList::record_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.PlayerRecordList.record_list)
  return record_list_.Get(index);
}
inline ::AFMsg::PlayerRecordBase* PlayerRecordList::add_record_list() {
  // @@protoc_insertion_point(field_add:AFMsg.PlayerRecordList.record_list)
  return record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::PlayerRecordBase >&
PlayerRecordList::record_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.PlayerRecordList.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// BrocastMsg

// .AFMsg.Ident player_id = 1;
inline bool BrocastMsg::has_player_id() const {
  return this != internal_default_instance() && player_id_ != NULL;
}
inline void BrocastMsg::clear_player_id() {
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
}
inline const ::AFMsg::Ident& BrocastMsg::player_id() const {
  const ::AFMsg::Ident* p = player_id_;
  // @@protoc_insertion_point(field_get:AFMsg.BrocastMsg.player_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* BrocastMsg::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.BrocastMsg.player_id)
  
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* BrocastMsg::mutable_player_id() {
  
  if (player_id_ == NULL) {
    player_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.BrocastMsg.player_id)
  return player_id_;
}
inline void BrocastMsg::set_allocated_player_id(::AFMsg::Ident* player_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_id_;
  }
  if (player_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_id, submessage_arena);
    }
    
  } else {
    
  }
  player_id_ = player_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.BrocastMsg.player_id)
}

// string msg_data = 2;
inline void BrocastMsg::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BrocastMsg::msg_data() const {
  // @@protoc_insertion_point(field_get:AFMsg.BrocastMsg.msg_data)
  return msg_data_.GetNoArena();
}
inline void BrocastMsg::set_msg_data(const ::std::string& value) {
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.BrocastMsg.msg_data)
}
#if LANG_CXX11
inline void BrocastMsg::set_msg_data(::std::string&& value) {
  
  msg_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AFMsg.BrocastMsg.msg_data)
}
#endif
inline void BrocastMsg::set_msg_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.BrocastMsg.msg_data)
}
inline void BrocastMsg::set_msg_data(const char* value, size_t size) {
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.BrocastMsg.msg_data)
}
inline ::std::string* BrocastMsg::mutable_msg_data() {
  
  // @@protoc_insertion_point(field_mutable:AFMsg.BrocastMsg.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BrocastMsg::release_msg_data() {
  // @@protoc_insertion_point(field_release:AFMsg.BrocastMsg.msg_data)
  
  return msg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BrocastMsg::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    
  } else {
    
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.BrocastMsg.msg_data)
}

// int64 nMsgID = 3;
inline void BrocastMsg::clear_nmsgid() {
  nmsgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BrocastMsg::nmsgid() const {
  // @@protoc_insertion_point(field_get:AFMsg.BrocastMsg.nMsgID)
  return nmsgid_;
}
inline void BrocastMsg::set_nmsgid(::google::protobuf::int64 value) {
  
  nmsgid_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.BrocastMsg.nMsgID)
}

// repeated .AFMsg.Ident player_Client_list = 4;
inline int BrocastMsg::player_client_list_size() const {
  return player_client_list_.size();
}
inline void BrocastMsg::clear_player_client_list() {
  player_client_list_.Clear();
}
inline ::AFMsg::Ident* BrocastMsg::mutable_player_client_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.BrocastMsg.player_Client_list)
  return player_client_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AFMsg::Ident >*
BrocastMsg::mutable_player_client_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.BrocastMsg.player_Client_list)
  return &player_client_list_;
}
inline const ::AFMsg::Ident& BrocastMsg::player_client_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.BrocastMsg.player_Client_list)
  return player_client_list_.Get(index);
}
inline ::AFMsg::Ident* BrocastMsg::add_player_client_list() {
  // @@protoc_insertion_point(field_add:AFMsg.BrocastMsg.player_Client_list)
  return player_client_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AFMsg::Ident >&
BrocastMsg::player_client_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.BrocastMsg.player_Client_list)
  return player_client_list_;
}

// -------------------------------------------------------------------

// Position

// float x = 1;
inline void Position::clear_x() {
  x_ = 0;
}
inline float Position::x() const {
  // @@protoc_insertion_point(field_get:AFMsg.Position.x)
  return x_;
}
inline void Position::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Position.x)
}

// float y = 2;
inline void Position::clear_y() {
  y_ = 0;
}
inline float Position::y() const {
  // @@protoc_insertion_point(field_get:AFMsg.Position.y)
  return y_;
}
inline void Position::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Position.y)
}

// float z = 3;
inline void Position::clear_z() {
  z_ = 0;
}
inline float Position::z() const {
  // @@protoc_insertion_point(field_get:AFMsg.Position.z)
  return z_;
}
inline void Position::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Position.z)
}

// -------------------------------------------------------------------

// ReqCommand

// .AFMsg.Ident control_id = 1;
inline bool ReqCommand::has_control_id() const {
  return this != internal_default_instance() && control_id_ != NULL;
}
inline void ReqCommand::clear_control_id() {
  if (GetArenaNoVirtual() == NULL && control_id_ != NULL) {
    delete control_id_;
  }
  control_id_ = NULL;
}
inline const ::AFMsg::Ident& ReqCommand::control_id() const {
  const ::AFMsg::Ident* p = control_id_;
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.control_id)
  return p != NULL ? *p : *reinterpret_cast<const ::AFMsg::Ident*>(
      &::AFMsg::_Ident_default_instance_);
}
inline ::AFMsg::Ident* ReqCommand::release_control_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ReqCommand.control_id)
  
  ::AFMsg::Ident* temp = control_id_;
  control_id_ = NULL;
  return temp;
}
inline ::AFMsg::Ident* ReqCommand::mutable_control_id() {
  
  if (control_id_ == NULL) {
    control_id_ = ::google::protobuf::Arena::Create< ::AFMsg::Ident >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ReqCommand.control_id)
  return control_id_;
}
inline void ReqCommand::set_allocated_control_id(::AFMsg::Ident* control_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete control_id_;
  }
  if (control_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      control_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, control_id, submessage_arena);
    }
    
  } else {
    
  }
  control_id_ = control_id;
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ReqCommand.control_id)
}

// .AFMsg.ReqCommand.EGameCommandType command_id = 2;
inline void ReqCommand::clear_command_id() {
  command_id_ = 0;
}
inline ::AFMsg::ReqCommand_EGameCommandType ReqCommand::command_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.command_id)
  return static_cast< ::AFMsg::ReqCommand_EGameCommandType >(command_id_);
}
inline void ReqCommand::set_command_id(::AFMsg::ReqCommand_EGameCommandType value) {
  
  command_id_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ReqCommand.command_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace AFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::AFMsg::ReqCommand_EGameCommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AFMsg::ReqCommand_EGameCommandType>() {
  return ::AFMsg::ReqCommand_EGameCommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AFMsgBase_2eproto_INCLUDED
